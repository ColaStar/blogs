(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{174:function(n,t,s){"use strict";s.r(t);var a=s(0),e=Object(a.a)({},function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"js里的this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js里的this","aria-hidden":"true"}},[n._v("#")]),n._v(" JS里的this")]),n._v(" "),s("p",[n._v("this本身很简单，总是指向当前类的实例，即谁调用它指向谁")]),n._v(" "),s("ul",[s("li",[n._v("js里的this是在function内部被创建")]),n._v(" "),s("li",[n._v("指向调用时所在函数绑定的对象，")]),n._v(" "),s("li",[n._v("this不能赋值，但可以被call，apply，bind改变")]),n._v(" "),s("li",[n._v("构造函数内的优先级要比原型链内的优先级要高")])]),n._v(" "),s("p",[n._v("this 和构造器")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Tab(nav, content) {\n    this.nav = nav\n    this.content = content\n}\n \nTab.prototype.getNav = function() {\n    return this.nav;\n};\nTab.prototype.setNav = function(nav) {\n    this.nav = nav;\n};\n")])])]),s("p",[n._v("this 和对象\nvar tab = {\nnav: '',\ncontent: '',\ngetNav: function() {\nreturn this.nav;\n},\nsetNav: function(n) {\nthis.nav = n;\n}\n}\nthis 和函数")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function showMsg() {\n    alert(this.message)\n}\n \nvar m1 = {\n    message: '输入的电话号码不正确'\n}\nvar m2 = {\n    message: '输入的身份证号不正确'\n}\n \nshowMsg.call(m1) // '输入的电话号码不正确'\nshowMsg.call(m2) // '输入的身份证号不正确'\n")])])]),s("p",[n._v("全局环境的 this")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("(function() {\n    // ...\n     \n})(this);\n")])])]),s("p",[n._v("this 和 DOM/事件")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<div id="nav"></div>\n<script>\n    nav.onclick = function() {\n        alert(this) // 指向div#nav\n    }\n<\/script>\n\n<div id="nav" onclick="getId()">ddd</div>\n<script>\n    function getId() {\n        alert(this.id)\n    }\n<\/script>\n为啥this.id是undefined\n\n判断 this 指向谁，看执行时而非定义时，只要函数(function)没有绑定在对象上调用，它的 this 就是 window\n')])])]),s("p",[n._v("this 可以被 call/apply 改变")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var m1 = {\n    message: 'This is A'\n} \nvar m2 = {\n    message: 'This is B'\n}  \n \nfunction showMsg() {\n    alert(this.message)\n}\n \nshowMsg() // undefined\nshowMsg.call(m1) // 'This is A'\nshowMsg.call(m2) // 'This is B'\n")])])]),s("p",[n._v("me/self/that/_this 暂存 this"),s("br"),n._v("\nES5 中新增的 bind 和 this")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var modal = {\n    message: 'This is A'\n}\n \nfunction showMsg() {\n    alert(this.message)\n}\n \nvar otherShowMsg = showMsg.bind(modal)\notherShowMsg() // 'This is A'\n")])])]),s("p",[n._v("ES6 箭头函数(arrow function) 和 this")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("。箭头函数的特征就是，定义在哪，this 就指向那。即箭头函数定义在一个对象里，那箭头函数里的 this 就指向该对象。\n\nvar book = {\n    author: 'John Resig',\n    init:  function() {\n        document.onclick = ev => {\n            alert(this.author) ; // 这里的 this 不是 document 了\n        }\n    }\n};\nbook.init()\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 函数提升\n(function() {\n  var a = 20;\n  function a() {};\n  console.log(a);\n  \n  // 函数提升的优先级更高。所以这段代码是这样的\n  function a() {}\n  var a;\n  a = 20;\n  console.log(a);\t// 20\n})();\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function test() {\n  this.a = 20;\n}\nthis.prototype.a = 30;\nvar q = new test;\nalert(q.a)  //20\n// 构造函数内的优先级要比原型链内的优先级要高\n")])])])])},[],!1,null,null,null);t.default=e.exports}}]);