(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{173:function(n,t,s){"use strict";s.r(t);var a=s(0),e=Object(a.a)({},function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("1.js是函数级作用域函数级作用域，在内部的变量，内部度能访问，外部不能访问，内部能访问外部的\n2.函数提升会优先于变量提升")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("(function() {\n  var a = 20;\n  function a() {};\n  console.log(a);\n  \n  // 函数提升的优先级更高。所以这段代码是这样的\n  function a() {}\n  var a;\n  a = 20;\n  console.log(a);\t// 20\n})();\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function test(){\n   if(false){\n       var i = 0;\n   }\n   console.log(i)//undefined\n}\nconsole.log(i)    //i is not defined   \n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var j =100;\n~(function(){\n    console.log(j)\n})()\n\n->\nvar j =100;\n~function(){\n    console.log(j)\n}()\n~使函数转换为表达式\n\n")])])]),t("blockquote",[t("p",[this._v("闭包\n拿到本不属于他的东西，容易造成内存泄露")])])])},[],!1,null,null,null);t.default=e.exports}}]);