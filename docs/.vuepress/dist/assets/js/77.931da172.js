(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{141:function(e,s,t){"use strict";t.r(s);var a=t(0),r=Object(a.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"node-js-express-框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js-express-框架","aria-hidden":"true"}},[e._v("#")]),e._v(" Node.js Express 框架")]),e._v(" "),t("ul",[t("li",[e._v("express简介")]),e._v(" "),t("li",[e._v("安装express")]),e._v(" "),t("li",[e._v("请求与响应")]),e._v(" "),t("li",[e._v("路由")]),e._v(" "),t("li",[e._v("处理静态文件")]),e._v(" "),t("li",[e._v("文件上传")]),e._v(" "),t("li",[e._v("GET与POST")]),e._v(" "),t("li",[e._v("Cookie 管理")])]),e._v(" "),t("h2",{attrs:{id:"express简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#express简介","aria-hidden":"true"}},[e._v("#")]),e._v(" express简介")]),e._v(" "),t("p",[e._v("Express 是一个简洁而灵活的 node.js Web应用框架, 提供了一系列强大特性帮助你创建各种 Web 应用，和丰富的 HTTP 工具。")]),e._v(" "),t("p",[e._v("使用 Express 可以快速地搭建一个完整功能的网站。")]),e._v(" "),t("p",[e._v("Express 框架核心特性：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("可以设置中间件来响应 HTTP 请求。")])]),e._v(" "),t("li",[t("p",[e._v("定义了路由表用于执行不同的 HTTP 请求动作。")])]),e._v(" "),t("li",[t("p",[e._v("可以通过向模板传递参数来动态渲染 HTML 页面。")])])]),e._v(" "),t("h2",{attrs:{id:"安装-express"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-express","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装 Express")]),e._v(" "),t("p",[e._v("安装 Express 并将其保存到依赖列表中：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cnpm install express --save\n")])])]),t("p",[e._v("以上命令会将 Express 框架安装在当前目录的 "),t("code",[e._v("node_modules")]),e._v(" 目录中， "),t("code",[e._v("node_modules")]),e._v("目录下会自动创建 express 目录。以下几个重要的模块是需要与 express 框架一起安装的：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("body-parser - node.js 中间件，用于处理 JSON, Raw, Text 和 URL 编码的数据。")])]),e._v(" "),t("li",[t("p",[e._v("cookie-parser - 这就是一个解析Cookie的工具。通过req.cookies可以取到传过来的cookie，并把它们转成对象。")])]),e._v(" "),t("li",[t("p",[e._v('multer - node.js 中间件，用于处理 enctype="multipart/form-data"（设置表单的MIME编码）的表单数据。')])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cnpm install body-parser --save\n$ cnpm install cookie-parser --save\n$ cnpm install multer --save\n")])])]),t("p",[e._v("安装完后，我们可以查看下 express 使用的版本号：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cnpm list express\n/data/www/node\n└── express@4.15.2  -> /Users/tianqixin/www/node/node_modules/.4.15.2@express\n")])])]),t("blockquote",[t("p",[e._v('第一个 Express 框架实例\n接下来我们使用 Express 框架来输出 "Hello World"。')])]),e._v(" "),t("p",[e._v('以下实例中我们引入了 express 模块，并在客户端发起请求后，响应 "Hello World" 字符串。')]),e._v(" "),t("p",[e._v("创建 express_demo.js 文件，代码如下所示：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//express_demo.js 文件\nvar express = require('express');\nvar app = express();\n \napp.get('/', function (req, res) {\n   res.send('Hello World');\n})\n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node express_demo.js \n")])])]),t("p",[e._v("应用实例，访问地址为 http://0.0.0.0:8081\n在浏览器中访问 http://127.0.0.1:8081，结果如下图所示：")]),e._v(" "),t("h2",{attrs:{id:"请求和响应"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求和响应","aria-hidden":"true"}},[e._v("#")]),e._v(" 请求和响应")]),e._v(" "),t("p",[t("code",[e._v("Express")]),e._v(" 应用使用回调函数的参数： "),t("code",[e._v("request")]),e._v(" 和 "),t("code",[e._v("response")]),e._v(" 对象来处理请求和响应的数据。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("app.get('/', function (req, res) {\n   // --\n})\n")])])]),t("p",[t("code",[e._v("request")]),e._v(" 和 "),t("code",[e._v("response")]),e._v(" 对象的具体介绍：")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Request")]),e._v(" 对象 - "),t("code",[e._v("request")]),e._v(" 对象表示 "),t("code",[e._v("HTTP")]),e._v(" 请求，"),t("strong",[e._v("包含了请求查询字符串，参数，内容，HTTP 头部等属性")]),e._v("。常见属性有：")])]),e._v(" "),t("ul",[t("li",[e._v("req.app：当callback为外部文件时，用req.app访问express的实例")]),e._v(" "),t("li",[e._v("req.baseUrl：获取路由当前安装的URL路径")]),e._v(" "),t("li",[e._v("req.body / req.cookies：获得「请求主体」/ Cookies")]),e._v(" "),t("li",[e._v("req.fresh / req.stale：判断请求是否还「新鲜」")]),e._v(" "),t("li",[e._v("req.hostname / req.ip：获取主机名和IP地址")]),e._v(" "),t("li",[e._v("req.originalUrl：获取原始请求URL")]),e._v(" "),t("li",[e._v("req.params：获取路由的parameters")]),e._v(" "),t("li",[e._v("req.path：获取请求路径")]),e._v(" "),t("li",[e._v("req.protocol：获取协议类型")]),e._v(" "),t("li",[e._v("req.query：获取URL的查询参数串")]),e._v(" "),t("li",[e._v("req.route：获取当前匹配的路由")]),e._v(" "),t("li",[e._v("req.subdomains：获取子域名")]),e._v(" "),t("li",[e._v("req.accepts()：检查可接受的请求的文档类型")]),e._v(" "),t("li",[e._v("req.acceptsCharsets / req.acceptsEncodings / req.acceptsLanguages：返回指定字符集的第一个可接受字符编码")]),e._v(" "),t("li",[e._v("req.get()：获取指定的HTTP请求头")]),e._v(" "),t("li",[e._v("req.is()：判断请求头Content-Type的MIME类型")])]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Response")]),e._v(" 对象 - "),t("code",[e._v("response")]),e._v(" 对象表示 "),t("code",[e._v("HTTP")]),e._v(" 响应，即在"),t("strong",[e._v("接收到请求时向客户端发送的")]),e._v("\nHTTP 响应数据。常见属性有：")])]),e._v(" "),t("ul",[t("li",[e._v("res.app：同req.app一样")]),e._v(" "),t("li",[e._v("res.append()：追加指定HTTP头")]),e._v(" "),t("li",[e._v("res.set()在res.append()后将重置之前设置的头")]),e._v(" "),t("li",[e._v("res.cookie(name，value [，option])：设置Cookie\nopition: domain / expires / httpOnly / maxAge / path / secure / signed")]),e._v(" "),t("li",[e._v("res.clearCookie()：清除Cookie")]),e._v(" "),t("li",[e._v("res.download()：传送指定路径的文件")]),e._v(" "),t("li",[e._v("res.get()：返回指定的HTTP头")]),e._v(" "),t("li",[e._v("res.json()：传送JSON响应")]),e._v(" "),t("li",[e._v("res.jsonp()：传送JSONP响应")]),e._v(" "),t("li",[e._v("res.location()：只设置响应的Location HTTP头，不设置状态码或者close response")]),e._v(" "),t("li",[e._v("res.redirect()：设置响应的Location HTTP头，并且设置状态码302")]),e._v(" "),t("li",[e._v("res.render(view,[locals],callback)：渲染一个view，同时向callback传递渲染后的字符串，如果在渲染过程中有错误发生next(err)将会被自动调用。callback将会被传入一个可能发生的错误以及渲染后的页面，这样就不会自动输出了。")]),e._v(" "),t("li",[e._v("res.send()：传送HTTP响应")]),e._v(" "),t("li",[e._v("res.sendFile(path [，options] [，fn])：传送指定路径的文件 -会自动根据文件extension设定Content-Type")]),e._v(" "),t("li",[e._v("res.set()：设置HTTP头，传入object可以一次设置多个头")]),e._v(" "),t("li",[e._v("res.status()：设置HTTP状态码")]),e._v(" "),t("li",[e._v("res.type()：设置Content-Type的MIME类型")])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由")]),e._v(" "),t("p",[e._v("我们已经了解了 HTTP 请求的基本应用，而路由决定了由谁(指定脚本)去响应客户端请求。")]),e._v(" "),t("p",[e._v("在HTTP请求中，我们可以通过路由提取出请求的URL以及GET/POST参数。")]),e._v(" "),t("p",[e._v("接下来我们扩展 Hello World，添加一些功能来处理更多类型的 HTTP 请求。")]),e._v(" "),t("p",[e._v("创建 express_demo2.js 文件，代码如下所示：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("express_demo2.js 文件代码：\nvar express = require('express');\nvar app = express();\n \n//  主页输出 \"Hello World\"\napp.get('/', function (req, res) {\n   console.log(\"主页 GET 请求\");\n   res.send('Hello GET');\n})\n \n \n//  POST 请求\napp.post('/', function (req, res) {\n   console.log(\"主页 POST 请求\");\n   res.send('Hello POST');\n})\n \n//  /del_user 页面响应\napp.get('/del_user', function (req, res) {\n   console.log(\"/del_user 响应 DELETE 请求\");\n   res.send('删除页面');\n})\n \n//  /list_user 页面 GET 请求\napp.get('/list_user', function (req, res) {\n   console.log(\"/list_user GET 请求\");\n   res.send('用户列表页面');\n})\n \n// 对页面 abcd, abxcd, ab123cd, 等响应 GET 请求\napp.get('/ab*cd', function(req, res) {   \n   console.log(\"/ab*cd GET 请求\");\n   res.send('正则匹配');\n})\n \n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node express_demo2.js \n")])])]),t("p",[e._v("应用实例，访问地址为 http://0.0.0.0:8081\n接下来你可以尝试访问 http://127.0.0.1:8081 不同的地址，查看效果。")]),e._v(" "),t("p",[e._v("在浏览器中访问 http://127.0.0.1:8081/list_user，结果如下图所示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express2.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express2.jpg",alt:""}})])]),e._v(" "),t("p",[e._v("在浏览器中访问 http://127.0.0.1:8081/abcd，结果如下图所示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express1.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express1.jpg",alt:""}})]),e._v("\n在浏览器中访问 http://127.0.0.1:8081/abcdefg，结果如下图所示：\n"),t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express3.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express3.jpg",alt:""}})])]),e._v(" "),t("h2",{attrs:{id:"静态文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 静态文件")]),e._v(" "),t("p",[e._v("Express 提供了内置的中间件 "),t("code",[e._v("express.static")]),e._v(" 来设置静态文件如：图片， CSS, JavaScript 等。")]),e._v(" "),t("p",[e._v("你可以使用 express.static 中间件来设置静态文件路径。例如，如果你将图片， CSS, JavaScript 文件放在 public 目录下，你可以这么写：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("app.use('/public', express.static('public'));\n")])])]),t("p",[e._v("我们可以到 public/images 目录下放些图片,如下所示：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("node_modules\nserver.js\npublic/\npublic/images\npublic/images/logo.png\n")])])]),t("p",[e._v('让我们再修改下 "Hello World" 应用添加处理静态文件的功能。')]),e._v(" "),t("p",[e._v("创建 express_demo3.js 文件，代码如下所示：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("express_demo3.js 文件代码：\nvar express = require('express');\nvar app = express();\n \napp.use('/public', express.static('public'));\n \napp.get('/', function (req, res) {\n   res.send('Hello World');\n})\n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node express_demo3.js \n应用实例，访问地址为 http://0.0.0.0:8081\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("p",[e._v("在浏览器中访问 http://127.0.0.1:8081/public/images/logo.png")]),e._v(" "),t("h2",{attrs:{id:"get-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-方法","aria-hidden":"true"}},[e._v("#")]),e._v(" GET 方法")]),e._v(" "),t("p",[e._v("以下实例演示了在表单中通过 GET 方法提交两个参数，我们可以使用 server.js 文件内的 process_get 路由器来处理输入：")]),e._v(" "),t("p",[e._v("index.htm 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<html>\n<body>\n<form action="http://127.0.0.1:8081/process_get" method="GET">\nFirst Name: <input type="text" name="first_name">  <br>\n \nLast Name: <input type="text" name="last_name">\n<input type="submit" value="Submit">\n</form>\n</body>\n</html>\n')])])]),t("p",[e._v("server.js 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var express = require('express');\nvar app = express();\n \napp.use('/public', express.static('public'));\n \napp.get('/index.htm', function (req, res) {\n   res.sendFile( __dirname + \"/\" + \"index.htm\" );\n})\n \napp.get('/process_get', function (req, res) {\n \n   // 输出 JSON 格式\n   var response = {\n       \"first_name\":req.query.first_name,\n       \"last_name\":req.query.last_name\n   };\n   console.log(response);\n   res.end(JSON.stringify(response));\n})\n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("node server.js \n")])])]),t("p",[e._v("应用实例，访问地址为 http://0.0.0.0:8081\n浏览器访问 http://127.0.0.1:8081/index.htm，如图所示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express5.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express5.jpg",alt:""}})]),e._v("\n现在你可以向表单输入数据，并提交，如下演示：\n"),t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif6.gif"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif6.gif",alt:""}})])]),e._v(" "),t("h2",{attrs:{id:"post-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#post-方法","aria-hidden":"true"}},[e._v("#")]),e._v(" POST 方法")]),e._v(" "),t("p",[e._v("以下实例演示了在表单中通过 POST 方法提交两个参数，我们可以使用 server.js 文件内的 process_post 路由器来处理输入：")]),e._v(" "),t("p",[e._v("index.htm 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<html>\n<body>\n<form action="http://127.0.0.1:8081/process_post" method="POST">\nFirst Name: <input type="text" name="first_name">  <br>\n \nLast Name: <input type="text" name="last_name">\n<input type="submit" value="Submit">\n</form>\n</body>\n</html>\n')])])]),t("p",[e._v("server.js 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\n \n// 创建 application/x-www-form-urlencoded 编码解析\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\n \napp.use('/public', express.static('public'));\n \napp.get('/index.htm', function (req, res) {\n   res.sendFile( __dirname + \"/\" + \"index.htm\" );\n})\n \napp.post('/process_post', urlencodedParser, function (req, res) {\n \n   // 输出 JSON 格式\n   var response = {\n       \"first_name\":req.body.first_name,\n       \"last_name\":req.body.last_name\n   };\n   console.log(response);\n   res.end(JSON.stringify(response));\n})\n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node server.js\n")])])]),t("p",[e._v("应用实例，访问地址为 http://0.0.0.0:8081\n浏览器访问 http://127.0.0.1:8081/index.htm，如图所示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express5.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express5.jpg",alt:""}})]),e._v("\n现在你可以向表单输入数据，并提交，如下演示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif7.gif"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif7.gif",alt:""}})])]),e._v(" "),t("h2",{attrs:{id:"文件上传"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件上传","aria-hidden":"true"}},[e._v("#")]),e._v(" 文件上传")]),e._v(" "),t("p",[e._v("以下我们创建一个用于上传文件的表单，使用 POST 方法，表单 enctype 属性设置为 multipart/form-data。")]),e._v(" "),t("p",[e._v("index.htm 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<html>\n<head>\n<title>文件上传表单</title>\n</head>\n<body>\n<h3>文件上传：</h3>\n选择一个文件上传: <br />\n<form action="/file_upload" method="post" enctype="multipart/form-data">\n<input type="file" name="image" size="50" />\n<br />\n<input type="submit" value="上传文件" />\n</form>\n</body>\n</html>\n')])])]),t("p",[e._v("server.js 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var express = require('express');\nvar app = express();\nvar fs = require(\"fs\");\n \nvar bodyParser = require('body-parser');\nvar multer  = require('multer');\n \napp.use('/public', express.static('public'));\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(multer({ dest: '/tmp/'}).array('image'));\n \napp.get('/index.htm', function (req, res) {\n   res.sendFile( __dirname + \"/\" + \"index.htm\" );\n})\n \napp.post('/file_upload', function (req, res) {\n \n   console.log(req.files[0]);  // 上传的文件信息\n \n   var des_file = __dirname + \"/\" + req.files[0].originalname;\n   fs.readFile( req.files[0].path, function (err, data) {\n        fs.writeFile(des_file, data, function (err) {\n         if( err ){\n              console.log( err );\n         }else{\n               response = {\n                   message:'File uploaded successfully', \n                   filename:req.files[0].originalname\n              };\n          }\n          console.log( response );\n          res.end( JSON.stringify( response ) );\n       });\n   });\n})\n \nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log(\"应用实例，访问地址为 http://%s:%s\", host, port)\n \n})\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node server.js \n")])])]),t("p",[e._v("应用实例，访问地址为 http://0.0.0.0:8081\n浏览器访问 http://127.0.0.1:8081/index.htm，如图所示：")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/express6.jpg"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/express6.jpg",alt:""}})]),e._v("\n现在你可以向表单输入数据，并提交，如下演示：\n"),t("a",{attrs:{"data-fancybox":"",title:"",href:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif8.gif"}},[t("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/nodejs-gif8.gif",alt:""}})])]),e._v(" "),t("h2",{attrs:{id:"cookie-管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-管理","aria-hidden":"true"}},[e._v("#")]),e._v(" Cookie 管理")]),e._v(" "),t("p",[e._v("我们可以使用中间件向 Node.js 服务器发送 cookie 信息，以下代码输出了客户端发送的 cookie 信息：")]),e._v(" "),t("p",[e._v("express_cookie.js 文件代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// express_cookie.js 文件\nvar express      = require('express')\nvar cookieParser = require('cookie-parser')\nvar util = require('util');\n \nvar app = express()\napp.use(cookieParser())\n \napp.get('/', function(req, res) {\n    console.log(\"Cookies: \" + util.inspect(req.cookies));\n})\n \napp.listen(8081)\n")])])]),t("p",[e._v("执行以上代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node express_cookie.js \n")])])]),t("h2",{attrs:{id:"express脚手架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#express脚手架","aria-hidden":"true"}},[e._v("#")]),e._v(" express脚手架")]),e._v(" "),t("p",[e._v("Express 应用程序生成器\n通过应用生成器工具 express-generator 可以快速创建一个应用的骨架。")]),e._v(" "),t("p",[e._v("express-generator 包含了 express 命令行工具。通过如下命令即可安装：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ npm install express-generator -g\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("-h 参数可以列出所有可用的命令行参数：\n\n$ express -h\n\n  Usage: express [options] [dir]\n\n  Options:\n\n    -h, --help          输出使用方法\n        --version       输出版本号\n    -e, --ejs           添加对 ejs 模板引擎的支持\n        --hbs           添加对 handlebars 模板引擎的支持\n        --pug           添加对 pug 模板引擎的支持\n    -H, --hogan         添加对 hogan.js 模板引擎的支持\n        --no-view       创建不带视图引擎的项目\n    -v, --view <engine> 添加对视图引擎（view） <engine> 的支持 (ejs|hbs|hjs|jade|pug|twig|vash) （默认是 jade 模板引擎）\n    -c, --css <engine>  添加样式表引擎 <engine> 的支持 (less|stylus|compass|sass) （默认是普通的 css 文件）\n        --git           添加 .gitignore\n    -f, --force         强制在非空目录下创建\n")])])]),t("p",[e._v("例如，如下命令创建了一个名称为 myapp 的 Express 应用。此应用将在当前目录下的 myapp 目录中创建，并且设置为使用 Pug 模板引擎（view engine）：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ express --view=pug myapp\n\n   create : myapp\n   create : myapp/package.json\n   create : myapp/app.js\n   create : myapp/public\n   create : myapp/public/javascripts\n   create : myapp/public/images\n   create : myapp/routes\n   create : myapp/routes/index.js\n   create : myapp/routes/users.js\n   create : myapp/public/stylesheets\n   create : myapp/public/stylesheets/style.css\n   create : myapp/views\n   create : myapp/views/index.pug\n   create : myapp/views/layout.pug\n   create : myapp/views/error.pug\n   create : myapp/bin\n   create : myapp/bin/www\n然后安装所有依赖包：\n\n$ cd myapp\n$ npm install\n在 MacOS 或 Linux 中，通过如下命令启动此应用：\n\n$ DEBUG=myapp:* npm start\n在 Windows 中，通过如下命令启动此应用：\n")])])]),t("blockquote",[t("p",[e._v("set DEBUG=myapp:* & npm start\n然后在浏览器中打开 http://localhost:3000/ 网址就可以看到这个应用了。")])]),e._v(" "),t("p",[e._v("通过生成器创建的应用一般都有如下目录结构：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".\n├── app.js\n├── bin\n│   └── www\n├── package.json\n├── public\n│   ├── images\n│   ├── javascripts\n│   └── stylesheets\n│       └── style.css\n├── routes\n│   ├── index.js\n│   └── users.js\n└── views\n    ├── error.pug\n    ├── index.pug\n    └── layout.pug\n\n7 directories, 9 files\n")])])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("express中间件是顺序执行，冲第一个中间件执行到最后一个中间件，发起响应。如下图\n"),t("a",{attrs:{"data-fancybox":"",title:"",href:"https://raw.githubusercontent.com/ColaStar/static/master/images/express顺序.png"}},[t("img",{attrs:{src:"https://raw.githubusercontent.com/ColaStar/static/master/images/express%E9%A1%BA%E5%BA%8F.png",alt:""}})])]),e._v(" "),t("p",[e._v("在以上express介绍中只是入门的一些知识，更多api的可以前往"),t("a",{attrs:{href:"http://www.expressjs.com.cn/4x/api.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网"),t("OutboundLink")],1),e._v("查看")])])},[],!1,null,null,null);s.default=r.exports}}]);