(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{197:function(n,e,t){"use strict";t.r(e);var r=t(0),i=Object(r.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"browserify"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#browserify","aria-hidden":"true"}},[n._v("#")]),n._v(" Browserify")]),n._v(" "),t("p",[n._v("Browserify 可以让你使用类似于 node 的 require() 的方式来组织浏览器端的 Javascript 代码，通过 预编译 让前端 Javascript 可以直接使用 Node NPM 安装的一些库。")]),n._v(" "),t("p",[n._v("参考链接：https://baike.baidu.com/item/browserify/16823990?fr=aladdin")]),n._v(" "),t("p",[n._v("参考链接： http://browserify.org/ 官网")]),n._v(" "),t("p",[n._v("1.项目初始化\nnpm init\n2.我们的主要目的是本地的 js 文件可以引用 server 的 js 文件\n3.安装包 uniq\ncnpm install uniq --save\n4.在项目中新建文件 index.js test.js index.html\n编辑文件")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('//index.js\n\nvar unique = require(\'uniq\');\nvar test = require(\'./test.js\');\ntest(unique);\n//test.js\n\nmodule.exports = function(cheerio) {\n    console.log(\'我是服务端的人\', cheerio);\n};\n//index.html\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script type="text/javascript" src="./bundle.js\n    "><\/script>\n</head>\n<body>\n    \n</body>\n</html>\n')])])]),t("p",[n._v("5.在全局安装 Browserify 这个库")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("npm install -g browserify\n")])])]),t("p",[n._v("6.把 index.js 文件编译成一个 bundle.js 文件")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("browserify index.js -o bundle.js\n")])])]),t("p",[n._v("7.编译成功之后 项目中会多一个 bundle.js 文件\nbundle.js")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module \'"+o+"\'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar unique = require(\'uniq\');\nvar test = require(\'./test.js\');\ntest(unique);\n},{"./test.js":3,"uniq":2}],2:[function(require,module,exports){\n"use strict"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n\n},{}],3:[function(require,module,exports){\nmodule.exports = function(cheerio) {\n    console.log(\'我是服务端的人\', cheerio);\n};\n},{}]},{},[1]);\n')])])]),t("p",[n._v("然后再把 index.html 文件在浏览器中打开，查看控制台输出如下，便证明引用成功了\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/ColaStar/static/master/images/Browserify.jpg",alt:""}})]),n._v(" "),t("h1",{attrs:{id:"总结："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结：","aria-hidden":"true"}},[n._v("#")]),n._v(" 总结：")]),n._v(" "),t("ul",[t("li",[n._v("webpack 包管理器 核心基于 loader/plugin ，编译 时 会生成很多无用的代码")]),n._v(" "),t("li",[n._v("gulp 基于文件流，更快，可以用它去编译 Node")]),n._v(" "),t("li",[n._v("grunt  基于文件 I/O")]),n._v(" "),t("li",[n._v("yo 发布一些自己的模块")]),n._v(" "),t("li",[n._v("bower 安装依赖\n-browserify 能够让本地的 js 应用服务端的 js，让 js 直接就具有 require 的能力")])])])},[],!1,null,null,null);e.default=i.exports}}]);