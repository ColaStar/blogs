(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{191:function(n,a,t){"use strict";t.r(a);var e=t(0),r=Object(e.a)({},function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"mac终端-vi-vim-的简单使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac终端-vi-vim-的简单使用","aria-hidden":"true"}},[n._v("#")]),n._v(" Mac终端 vi/vim 的简单使用")]),n._v(" "),t("h2",{attrs:{id:"vi-vim-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-的使用","aria-hidden":"true"}},[n._v("#")]),n._v(" vi/vim 的使用")]),n._v(" "),t("p",[n._v("基本上 vi/vim 共分为三种模式，分别是命令模式（Command mode），插入模式（Insert mode）和底线命令模式（Last line mode）")]),n._v(" "),t("h3",{attrs:{id:"命令模式："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令模式：","aria-hidden":"true"}},[n._v("#")]),n._v(" 命令模式：")]),n._v(" "),t("pre",[t("code",[n._v("用户刚刚启动 vi/vim，便进入了命令模式。\n")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    i 　切换到插入模式，以输入字符。\n\n    x   删除当前光标所在处的字符。\n\n    :   切换到底线命令模式，以在最底一行输入命令。\n")])])]),t("pre",[t("code",[n._v("若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式\n")])]),n._v(" "),t("h3",{attrs:{id:"输入模式："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入模式：","aria-hidden":"true"}},[n._v("#")]),n._v(" 输入模式：")]),n._v(" "),t("p",[n._v("在命令模式下按下 i 就进入了输入模式。")]),n._v(" "),t("blockquote",[t("p",[n._v("在输入模式中，可以使用以下按键：")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("        ENTER(回车键)      　　　　换行\n\n        BACK SPACE(退格键) 　　 删除光标前一个字符\n\n        方向键        　　　　　　　在文本中移动光标\n\n        HOME/END               　　移动光标到行首/行尾\n\n        Page Up/Page Down        上/下翻页\n\n        ESC                    　　　　退出输入模式，切换到命令模式\n")])])]),t("h3",{attrs:{id:"底线命令模式："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#底线命令模式：","aria-hidden":"true"}},[n._v("#")]),n._v(" 底线命令模式：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    在命令模式下按下 :（英文冒号）就进入了底线命令模式。\n\n    底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。\n\n    在底线命令模式中，基本的命令有（已经省略了冒号）：\n\n    q 　　退出程序\n\n    w 　　保存文件\n\n    按ESC键可随时退出底线命令模式。\n")])])]),t("h2",{attrs:{id:"vi-vim-使用实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-使用实例","aria-hidden":"true"}},[n._v("#")]),n._v(" vi/vim 使用实例")]),n._v(" "),t("ul",[t("li",[n._v("使用 vi 来建立名为 test.txt 的文件")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    vi test.txt\n\n按下 ESC 按钮回到一般模式\n\n在一般模式中按下 :wq 储存后离开 vi\n")])])]),t("h2",{attrs:{id:"vi-vim-按键说明-一般模式下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-按键说明-一般模式下","aria-hidden":"true"}},[n._v("#")]),n._v(" vi/vim 按键说明(一般模式下)")]),n._v(" "),t("blockquote",[t("p",[n._v("一般模式下")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('    h 或 向左箭头键(←)      光标向左移动一个字符\n\n    j 或 向下箭头键(↓)       光标向下移动一个字符\n\n    k 或 向上箭头键(↑)      光标向上移动一个字符\n\n    l 或 向右箭头键(→)       光标向右移动一个字符\n\n    如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 "30j" 或 "30↓" 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！\n\n \n\n    Ctrl + f 屏幕『向下』移动一页，相当于 [Page Down]按键\n\n    Ctrl + b 屏幕『向上』移动一页，相当于 [Page Up] 按键\n\n \n\n    0 或功能键[Home] 这是数字『 0 』：移动到这一行的最前面字符处\n\n    $ 或功能键[End] 移动到这一行的最后面字符处\n\n    G 移动到这个档案的最后一行\n\n    gg 移动到这个档案的第一行\n\n    n<Enter> n 为数字。光标向下移动 n 行\n\n \n\n    /word 向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可\n\n    n       重复前一个搜寻的动作\n\n    N      『反向』进行前一个搜寻动作\n\n    :n1,n2s/word1/word2/g       n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2\n\n    :n1,$s/word1/word2/g        从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2\n\n    :n1,$s/word1/word2/gc       从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代\n\n \n\n    x   向后删除一个字符\n\n    X   向前删除一个字符\n\n \n\n    dd      删除游标所在的那一整行\n\n    ndd     n 为数字。删除光标所在的向下 n 行(包括游标所在的那一行)\n\n \n\n    yy      复制游标所在的那一行\n\n    nyy     n 为数字。复制光标所在的向下 n 行\n\n \n\n    p       为将已复制的数据在光标下一行贴上\n\n    P       为将已复制的数据在光标上一行贴上\n\n \n\n    u             复原前一个动作(撤销)\n\n    Ctrl + r    重做上一个动作\n\n    .          　 重复前一个动作\n')])])]),t("blockquote",[t("p",[n._v("一般模式切换到编辑模式")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    i   从目前光标所在处插入\n\n    I   在目前所在行的第一个非空格符处开始插入\n\n \n\n    a   从目前光标所在的下一个字符处开始插入\n\n    A   从光标所在行的最后一个字符处开始插入\n\n \n\n    o   在目前光标所在的下一行处插入新的一行\n\n    O   在目前光标所在处的上一行插入新的一行\n\n \n\n    r   只会取代光标所在的那一个字符一次\n\n    R   会一直取代光标所在的文字，直到按下 ESC 为止\n")])])]),t("blockquote",[t("p",[n._v("一般模式切换到指令行模式")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    :w      将编辑的数据写入硬盘档案中\n\n    :w!     强制将编辑的数据写入硬盘档案中\n\n \n\n    :q      离开\n\n    :q!     为强制离开不储存档案\n\n \n\n    :wq     储存后离开\n\n    :wq!    强制储存后离开\n\n \n\n    :set nu     　　显示行号，设定之后，会在每一行的前缀显示该行的行号\n\n    :set nonu  　  取消行号\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);