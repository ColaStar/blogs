(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{142:function(e,s,a){"use strict";a.r(s);var n=a(0),t=Object(n.a)({},function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack")]),e._v(" "),a("p",[e._v("站在巨人的肩膀")]),e._v(" "),a("h2",{attrs:{id:"webpack是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack是什么","aria-hidden":"true"}},[e._v("#")]),e._v(" Webpack是什么?")]),e._v(" "),a("p",[e._v("Webpack是一个模块打包工具，在Webpack里一切文件皆模块。通过loader转换文件，通过plugin注入钩子，最后输出由多个模块组合的文件。Webpack专注构建模块化项目。\nWebpack可以看作是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其他一些不能被浏览器直接运行的扩展语音(如：Scss,TypeScript等)，并将其打包为合适的格式以供浏览器使用。")]),e._v(" "),a("h2",{attrs:{id:"webpack与grunt、gulp的不同？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack与grunt、gulp的不同？","aria-hidden":"true"}},[e._v("#")]),e._v(" Webpack与Grunt、Gulp的不同？")]),e._v(" "),a("p",[e._v("Grunt/Gulp是一种能够优化前端开发流程的工具，而Webpack是一种模块化的解决方案。")]),e._v(" "),a("h3",{attrs:{id:"工作方式不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作方式不同","aria-hidden":"true"}},[e._v("#")]),e._v(" 工作方式不同")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Grunt/Gulp的工作方式是：在一个配置文件中，指明某些文件进行类似编译/组合/压缩等任务的具体步骤，之后工具可以自动帮你完成这些任务")])]),e._v(" "),a("li",[a("p",[e._v("Webpack的工作方式是：把项目当作是一个整体，通过指定的入口文件，Webpack会从这个入口文件开始找到项目所有的依赖文件，然后使用loader处理它们，最后打包成一个或多个浏览器能够识别的JavaScript文件")])])]),e._v(" "),a("h3",{attrs:{id:"构建思路不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建思路不同","aria-hidden":"true"}},[e._v("#")]),e._v(" 构建思路不同")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Grunt/Gulp需要将整个前端构建过程拆分成多个task，合理控制所有task的调用关系")])]),e._v(" "),a("li",[a("p",[e._v("Webpack需要定义好入/出口，并需要清楚对于不同类型资源应该用什么loader解析编译")])])]),e._v(" "),a("p",[e._v("Grunt/Gulp是基于任务和流(task和stream)的。类似jQuery,找到一个(或一类)文件，对其做一系列的链式操作，更新流上的数据，整条链式操作构成了一个任务，多个任务就构成了整个Web的构建流程。")]),e._v(" "),a("p",[e._v("Webpack是基于入口的。Webpack会自动的递归解析入口所需要加载的所有资源文件，然后用不同的loader来处理不同的文件，用pulgin扩展Webpack功能。")]),e._v(" "),a("h3",{attrs:{id:"背景知识不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景知识不同","aria-hidden":"true"}},[e._v("#")]),e._v(" 背景知识不同")]),e._v(" "),a("p",[e._v("Grunt/Gulp更像是后端开发者的思路，需要对整个流程了如指掌。Webpack更倾向于前端开发者的思路。")]),e._v(" "),a("p",[e._v("详细的可以看下边的源码分析")]),e._v(" "),a("h2",{attrs:{id:"分别介绍bundle，chunk，module是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分别介绍bundle，chunk，module是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 分别介绍bundle，chunk，module是什么？")]),e._v(" "),a("ul",[a("li",[e._v("bundle：由Webpack打包出来的文件")]),e._v(" "),a("li",[e._v("chunk：代码块，webpack在进行模块的依赖分析的时候，代码分割出来的代码块")]),e._v(" "),a("li",[e._v("module：是开发中的单个模块，在Webpack中，一切皆模块，一个模块对应一个文件")])]),e._v(" "),a("h2",{attrs:{id:"什么是loader-什么是plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是loader-什么是plugin","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是Loader?什么是Plugin?")]),e._v(" "),a("ul",[a("li",[e._v("loader: 模块转换器，用于对模块的源代码进行转换")]),e._v(" "),a("li",[e._v("plugin: 自定义webpack打包过程的方式，插件含有apply属性的JavaScript对象，apply属性会被webpack compiler调用，并且compiler对象可以在整个编译生命周期内访问")])]),e._v(" "),a("h2",{attrs:{id:"loader和plugin有哪些不同？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader和plugin有哪些不同？","aria-hidden":"true"}},[e._v("#")]),e._v(" loader和plugin有哪些不同？")]),e._v(" "),a("h3",{attrs:{id:"不同的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同的作用","aria-hidden":"true"}},[e._v("#")]),e._v(" 不同的作用")]),e._v(" "),a("ul",[a("li",[e._v('loader直译为“加载器"，Webpack将一切文件视为模块，但是Webpack原生只能解析JavaScript和JSON类型文件。如果想加载解析其他类型文件，就会用到loader。所以loader是让Webpack拥有加载和解析非JavaScript文件的能力')]),e._v(" "),a("li",[e._v("plugin直译为”插件“，plugin可以扩展Webpack的功能，让Webpack具有更多的灵活性。在Webpack运行的生命周期中会广播许多事件，plugin可以监听这些事件，在合适的时机通过Webpack提供的API改变输出结果")])]),e._v(" "),a("h3",{attrs:{id:"不同的用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同的用法","aria-hidden":"true"}},[e._v("#")]),e._v(" 不同的用法")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("loader在module rules中配置，也就说它作为模块解析规则存在。类型为Array，每一项都是一个Object，里面描述了什么类型的文件(test)，使用什么加载(loader)和使用的参数(options)")])]),e._v(" "),a("li",[a("p",[e._v("plugin单独在plugins中单独配置。类型为Array，每项都是一个plugin的实例，参数是通过构造函数传入")])])]),e._v(" "),a("h2",{attrs:{id:"有哪些常见的loader？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的loader？","aria-hidden":"true"}},[e._v("#")]),e._v(" 有哪些常见的Loader？")]),e._v(" "),a("ul",[a("li",[e._v("file-loader: 将文件输出到一个文件夹中，在代码中通过相对路径(url)去引用输出的文件")]),e._v(" "),a("li",[e._v("url-loader: 和file-loader类似，但是能在文件很小的情况下，以base64的方式将内容注入到代码中")]),e._v(" "),a("li",[e._v("image-loader: 加载并压缩图片文件")]),e._v(" "),a("li",[e._v("babel-lodader: 脚本js")]),e._v(" "),a("li",[e._v("css-loader: 加载CSS，支持模块化/压缩/文件导入等特性")]),e._v(" "),a("li",[e._v("style-loader：把CSS代码注入到JavaScript中，通过DOM操作去加载CSS")]),e._v(" "),a("li",[e._v("eslint-loader: 通过ESlint检查JavaScript代码")])]),e._v(" "),a("h2",{attrs:{id:"有哪些常见的plugin？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的plugin？","aria-hidden":"true"}},[e._v("#")]),e._v(" 有哪些常见的Plugin？")]),e._v(" "),a("ul",[a("li",[e._v("define-plugin: 定义环境变量")]),e._v(" "),a("li",[e._v("html-webpack-pulgin: 生成创建html入口文件，并引用对应的外部资源")]),e._v(" "),a("li",[e._v("uglifyjs-plugin: 通过Uglifyjs压缩JavaScript代码")]),e._v(" "),a("li",[e._v("mini-css-extract-plugin: 分离CSS文件")]),e._v(" "),a("li",[e._v("clean-webpack-plugin: 删除打包文件")]),e._v(" "),a("li",[e._v("happypack: 实现多线程加速编译（多核编译）")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const HappyPack = require('happypack');\nconst os = require('os');\n//开辟一个线程池\nconst happyThreadPoll = HappyPack.ThreadPool({ size: os.cpus().length }); module.exports.plugins = [\nnew HappyPack({\nid: 'babel',\nthreadPool: happyThreadPoll,\nloaders: [{\nloader: 'babel-loader'\n}] })\n];\n\n\n//use: 'happypack/loader?id=babel',\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h2",{attrs:{id:"tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking","aria-hidden":"true"}},[e._v("#")]),e._v(" Tree Shaking")]),e._v(" "),a("p",[e._v("为了使用tree shaking，需要满足以下条件：")]),e._v(" "),a("ul",[a("li",[e._v("使用ES2015语法(即import和export)")]),e._v(" "),a("li",[e._v("在项目package.json文件中，添加sideEffects入口")]),e._v(" "),a("li",[e._v("引入一个能够删除未引用代码(dead code)的压缩工具(minifier)(例如：UglifyJSPlugin)")])]),e._v(" "),a("h3",{attrs:{id:"将文件标记为无副作用-side-effect-free"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将文件标记为无副作用-side-effect-free","aria-hidden":"true"}},[e._v("#")]),e._v(" 将文件标记为无副作用(side-effect-free)")]),e._v(" "),a("p",[e._v("这种方式是通过"),a("code",[e._v("package.json")]),e._v("的"),a("code",[e._v("sideEffects")]),e._v("属性来实现的。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "sideEffects": false\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("「副作用」的定义是，在导入时会执行特殊行为的代码，而不是仅仅暴露一个"),a("code",[e._v("export")]),e._v("或多个"),a("code",[e._v("export")]),e._v("。举例说明，例如"),a("code",[e._v("polyfill")]),e._v("，它影响全局作用域，并且通常不提供export。")]),e._v(" "),a("p",[e._v("注意，任何导入的文件都会受到"),a("code",[e._v("tree shaking")]),e._v("的影响。这意味着，如果在项目中使用类似"),a("code",[e._v("css-loader")]),e._v("并导入"),a("code",[e._v("CSS")]),e._v("文件，则需要将其添加到 "),a("code",[e._v("side effect")]),e._v(" 列表中，以免在生产模式中无意中将它删除：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{\n  \"sideEffects\": ['*.css']\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h3",{attrs:{id:"压缩输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩输出","aria-hidden":"true"}},[e._v("#")]),e._v(" 压缩输出")]),e._v(" "),a("p",[e._v("从 "),a("code",[e._v("webpack 4")]),e._v(' 开始，也可以通过 "'),a("code",[e._v("mode")]),e._v('" 配置选项轻松切换到压缩输出，只需设置为 "'),a("code",[e._v("production")]),e._v('"。')]),e._v(" "),a("p",[e._v("也可以在命令行接口中使用"),a("code",[e._v("--optimize-minimize")]),e._v("标记，来使用"),a("code",[e._v("UglifyjsPlugin")]),e._v("。")]),e._v(" "),a("h2",{attrs:{id:"code-splitting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-splitting","aria-hidden":"true"}},[e._v("#")]),e._v(" Code Splitting")]),e._v(" "),a("p",[a("code",[e._v("code splitting")]),e._v("的必要性")]),e._v(" "),a("ul",[a("li",[e._v("不进行"),a("code",[e._v("code splitting")]),e._v("，打包后单文件提交较大，加载时长较长，影响用户体验")]),e._v(" "),a("li",[e._v("不进行"),a("code",[e._v("code splitting")]),e._v("，经常修改业务代码，重新打包后，浏览器不能进行缓存，导致性能较差，影响用户体验")])]),e._v(" "),a("h3",{attrs:{id:"同步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步代码","aria-hidden":"true"}},[e._v("#")]),e._v(" 同步代码")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import _ from 'lodash';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("webpack.config.js配置如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("....\noptimization: {\n  splitChunks: {\n    chunks: 'all'\n  }\n}\n....\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("配置后，会将公用类库进行打包，生成一个vendors~main.js文件。")]),e._v(" "),a("h3",{attrs:{id:"异步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步代码","aria-hidden":"true"}},[e._v("#")]),e._v(" 异步代码")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function getComponent() {\n  return import('lodash').then(({ default: _ }) => {\n    var element = document.createElement('div');\n    element.innerHTML = _.join(['Clear', 'love'], '');\n    return element;\n  })\n}\n\ngetComponent().then(element => {\n  document.body.appendChild(element);\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h2",{attrs:{id:"开发中的server-devserver配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发中的server-devserver配置","aria-hidden":"true"}},[e._v("#")]),e._v(" 开发中的server---devServer配置")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/dev-server/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网介绍"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("下边简单介绍一下")]),e._v(" "),a("blockquote",[a("p",[e._v("contentBase")])]),e._v(" "),a("p",[e._v("该配置项指定了服务器资源的根目录，如果不配置"),a("code",[e._v("contentBase")]),e._v("或使用"),a("code",[e._v("false")]),e._v("的话，那么contentBase默认是当前执行的目录,一般是项目的根目录。\n可能如上解析还不够清晰，没有关系，我们下面还是先看下我整个项目的目录结构，然后进行相关的配置，使用"),a("code",[e._v("contentBase")]),e._v("配置项再来理解下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("### 目录结构如下：\ndemo1                                       # 工程名\n|   |--- dist                               # dist是打包后生成的目录文件             \n|   |--- node_modules                       # 所有的依赖包\n|   |--- js                                 # 存放所有js文件\n|   | |-- demo1.js  \n|   | |-- main.js                           # js入口文件\n|   |\n|   |--- webpack.config.js                  # webpack配置文件\n|   |--- index.html                         # html文件\n|   |--- styles                             # 存放所有的css样式文件                              \n|   |--- .gitignore  \n|   |--- README.md\n|   |--- package.json\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("p",[e._v("在webpack配置加上如下配置，即配置项指定了服务器资源的根目录。比如我们打包后的文件放入 dist目录下。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('module.exports = {\n  devServer: {\n    contentBase: path.join(__dirname, "dist")\n  },\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如上配置完成后，我们再运行 npm run dev, 再在地址栏中 运行 http://localhost:8080/ 后看到如下信息：")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver.png",alt:""}})])]),e._v(" "),a("p",[e._v("也就是说 配置了 contentBase后，服务器就指向了资源的根目录，而不再指向项目的根目录。因此再访问 http://localhost:8080/index.html 是访问不到的。但是访问 http://localhost:8080/bundle.js 该js文件是可以访问的到的。")]),e._v(" "),a("blockquote",[a("p",[e._v("port")])]),e._v(" "),a("p",[e._v("该配置属性指定了开启服务器的端口号")]),e._v(" "),a("blockquote",[a("p",[e._v("host")])]),e._v(" "),a("p",[e._v("该配置属性指定了开启服务器的IP")]),e._v(" "),a("blockquote",[a("p",[e._v("headers\n该配置项可以在HTTP响应中注入一些HTTP响应头。 比如如下：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  devServer: {\n    headers: {\n      'X-foo': '112233'\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("如上配置完成后，打包下，刷新下浏览器，可以看到请求头加了上面的信息，如下所示：\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver1.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver1.png",alt:""}})])]),e._v(" "),a("blockquote",[a("p",[e._v("historyApiFallback")])]),e._v(" "),a("p",[e._v("该配置项属性是用来应对返回404页面时定向跳转到特定页面的。一般是应用在 "),a("code",[e._v("HTML5中History API")]),e._v(" 的单页应用，比如在访问路由时候，访问不到该路由的时候，会跳转到index.html页面。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  devServer: {\n    historyApiFallback: true\n  },\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("当然如上只是简单的配置下，当然我们也可以手动通过 正则来匹配路由，比如访问 /user 跳转到 user.html，访问 /home 跳转到 home.html, 如下配置：")]),e._v(" "),a("p",[e._v("当然我们需要在 dist 目录下 新建 home.html 和 user.html 了，如下基本配置：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" historyApiFallback: {\n      // 使用正则来匹配路由\n      rewrites: [\n        { from: /^\\/user/, to: '/user.html' },\n        { from: /^\\/home/, to: '/home.html' }\n      ]\n    }\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("blockquote",[a("p",[e._v("hot")])]),e._v(" "),a("p",[e._v("该配置项是指模块替换换功能，"),a("code",[e._v("DevServer")]),e._v(" 默认行为是在发现源代码被更新后通过自动刷新整个页面来做到实时预览的，")]),e._v(" "),a("p",[e._v("但是开启模块热替换功能后，它是通过在不刷新整个页面的情况下通过使用新模块替换旧模块来做到实时预览的。")]),e._v(" "),a("blockquote",[a("p",[e._v("inline")])]),e._v(" "),a("p",[e._v("webpack-dev-server 有两种模式可以实现"),a("strong",[e._v("自动刷新")]),e._v("和"),a("strong",[e._v("模块热替换机制")]),e._v("。")]),e._v(" "),a("ul",[a("li",[e._v("1.iframe")])]),e._v(" "),a("p",[e._v("页面是被嵌入到一个iframe页面，并且在模块变化的时候重载页面。")]),e._v(" "),a("p",[e._v("可能如上解释，我们还不能完全能理解到底是什么意思，没有关系，我们继续来看下配置和实践效果。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  devServer: {\n    inline: false\n  },\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如上代码配置 inline: false 就是使用iframe模式来重载页面了。")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver2.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver2.png",alt:""}})])]),e._v(" "),a("p",[e._v("接着我们在浏览器下 输入 http://0.0.0.0:8081/webpack-dev-server/ 地址后 回车，即可看到页面，我们查看源代码的时候，会看到嵌入了一个iframe页面，如下图所示：")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver3.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver3.png",alt:""}})])]),e._v(" "),a("p",[e._v("当我们重新修改main.js 或 它的依赖文件 demo1.js 的时候，保存后，它也会自动重新加载页面，这就是使用 iframe 模式来配置加载页面的。")]),e._v(" "),a("p",[e._v("iframe 模式的特点有：")]),e._v(" "),a("ol",[a("li",[e._v("在网页中嵌入了一个iframe，将我们自己的应用代码注入到 这个 iframe中去了。")]),e._v(" "),a("li",[e._v("在页面头部会有一个 App ready. 这个提示，用于显示构建过程的状态信息。")]),e._v(" "),a("li",[e._v("加载了 live.bundle.js文件，还同时包含了 socket.io的client代码，进行了 websocket通讯，从而完成了自动编译打包，页面自动刷新功能。")])]),e._v(" "),a("p",[e._v("我们看下请求的所有文件有如下：\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver4.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver4.png",alt:""}})])]),e._v(" "),a("ul",[a("li",[e._v("2.inline 模式")])]),e._v(" "),a("p",[e._v("开启模式，只需要把上面的配置代码变为 inline: true即可，它在构建变化后的代码会通过代理客户端来控制网页刷新。")]),e._v(" "),a("p",[e._v("如上配置后，我们运行 webpack-dev-server 命令后，如下所示：")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver5.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver5.png",alt:""}})])]),e._v(" "),a("p",[e._v("接着我们在地址栏中 http://0.0.0.0:8081/ 运行下 就可以访问到 项目中的根目录 index.html了，当我们修改入口文件的代码保存也一样\n能实时刷新，其实效果是一样的。")]),e._v(" "),a("p",[e._v("inline模式的特点有：")]),e._v(" "),a("ol",[a("li",[e._v("构建的消息在控制台中直接显示出来。")]),e._v(" "),a("li",[e._v("socket.io的client代码被打包进bundle.js当中，这样就能和websocket通讯，从而完成自动编译工作，页面就能实现自动刷新功能。")]),e._v(" "),a("li",[e._v("以后的每一个入口文件都会插入上面的socket的一段代码，这样会使的打包后的bundle.js文件变得臃肿。")])]),e._v(" "),a("blockquote",[a("p",[e._v("open")])]),e._v(" "),a("p",[e._v("该属性用于DevServer启动且第一次构建完成时，自动使用我们的系统默认浏览器去打开网页。")]),e._v(" "),a("blockquote",[a("p",[e._v("overlay")])]),e._v(" "),a("p",[e._v("该属性是用来在编译出错的时候，在浏览器页面上显示错误。该属性值默认为false，需要的话，设置该参数为true。\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver6.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver6.png",alt:""}})])]),e._v(" "),a("blockquote",[a("p",[e._v("stats(字符串)")])]),e._v(" "),a("p",[e._v("该属性配置是用来在编译的时候再命令行中输出的内容，我们没有设置 stats的时候，输出是如下的样子：如下所示：")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver7.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver7.png",alt:""}})])]),e._v(" "),a("p",[e._v("该属性值可以有如下值：")]),e._v(" "),a("p",[e._v("stats:"),a("code",[e._v("'errors-only'")]),e._v(" 表示只有错误的才会被打印，没有错误就不打印，因此多余的信息就不会显示出来了。，我们添加下这个配置到devServer中；")]),e._v(" "),a("p",[e._v("该属性值还有 'minimal', 'normal', 'verbose' 等。")]),e._v(" "),a("blockquote",[a("p",[e._v("compress")])]),e._v(" "),a("p",[e._v("该属性是一个布尔型的值，默认为false，当他为true的时候，它会对所有服务器资源采用gzip进行压缩。")]),e._v(" "),a("blockquote",[a("p",[e._v("proxy 实现跨域")])]),e._v(" "),a("p",[e._v("有时候我们使用webpack在本地启动服务器的时候，由于我们使用的访问的域名是 http://localhost:8081 这样的，但是我们服务端的接口是其他的，")]),e._v(" "),a("p",[e._v("那么就存在域名或端口号跨域的情况下，但是很幸运的是 devServer有一个叫proxy配置项，可以通过该配置来解决跨域的问题，那是因为 dev-server 使用了 http-proxy-middleware 包("),a("a",{attrs:{href:"https://www.npmjs.com/package/http-proxy-middleware",target:"_blank",rel:"noopener noreferrer"}},[e._v("了解该包的更多用法"),a("OutboundLink")],1),e._v(" )。")]),e._v(" "),a("p",[e._v("假如现在我们本地访问的域名是 http://localhost:8081, 但是我现在调用的是百度页面中的一个接口，该接口地址是：http://news.baidu.com/widget?ajax=json&id=ad。现在我们只需要在devServer中的proxy的配置就可以了：\n如下配置：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("proxy: {\n  '/api': {\n    target: 'http://news.baidu.com', // 目标接口的域名\n    // secure: true,  // https 的时候 使用该参数\n    changeOrigin: true,  // 是否跨域\n    pathRewrite: {\n      '^/api' : ''  // 重写路径\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("调用")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("axios.get('/api/widget?ajax=json&id=ad').then(res => {\n  console.log(res);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("下面我们来理解下上面配置的含义：")]),e._v(" "),a("ol",[a("li",[e._v("首先是百度的接口地址是这样的：http://news.baidu.com/widget?ajax=json&id=ad;")]),e._v(" "),a("li",[e._v("proxy 的配置项 '/api' 和 target: 'http://news.baidu.com' 的含义是，匹配请求中 /api 含有这样的域名 重定向 到 'http://news.baidu.com'来。因此我在接口地址上 添加了前缀 '/api', 如： axios.get('/api/widget?ajax=json&id=ad'); 因此会自动补充前缀，也就是说，url: '/api/widget?ajax=json&id=ad' 等价\n于 url: 'http://news.baidu.com/api/widget?ajax=json&id=ad'.")]),e._v(" "),a("li",[e._v("changeOrigin: true/false 还参数值是一个布尔值，含义是 是否需要跨域。")]),e._v(" "),a("li",[e._v("secure: true, 如果是https请求就需要改参数配置，需要ssl证书吧。")]),e._v(" "),a("li",[e._v("pathRewrite: {'^/api' : ''}的含义是重写url地址，把url的地址里面含有 '/api' 这样的 替换成 '',\n因此接口地址就变成了 http://news.baidu.com/widget?ajax=json&id=ad； 因此就可以请求得到了，最后就返回\n接口数据了。")])]),e._v(" "),a("p",[e._v("如下图所示：\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_devserver8.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_devserver8.png",alt:""}})])]),e._v(" "),a("h2",{attrs:{id:"什么-是模块热更新？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么-是模块热更新？","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么 是模块热更新？")]),e._v(" "),a("p",[e._v("模块热更新是Webpack是的一个功能，它可以使得代码修改以后不需刷新浏览器就可以更新，是高级版的自动刷新浏览器。devServer通过hot属性可以控制模块热更替。")]),e._v(" "),a("blockquote",[a("p",[e._v("通过配置文件")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const webpack = require(\'webpack\');\nconst path = require(\'path\');\nlet env = process.env.NODE_ENV == "development" ? "development" : "production";\nconst config = {\n  mode: env,\n  devServer: {\n     hot:true //模块热替换特性\n  },\n  plugins: [\n     new webpack.HotModuleReplacementPlugin(), //热加载插件\n  ]\n}\nmodule.exports = config;\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("blockquote",[a("p",[e._v("通过命令行")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"script": {\n  "start": "NODE_EVN=development webpack-dev-server --config webpack-devlop-config.js --hot"\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"webpack的热更新是如何做到的？说明其原理？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack的热更新是如何做到的？说明其原理？","aria-hidden":"true"}},[e._v("#")]),e._v(" Webpack的热更新是如何做到的？说明其原理？")]),e._v(" "),a("p",[e._v("Webpack的热更新有称为热替换(Hot Module Replacement)，缩写为HMR。这个机制可以实现不刷新浏览器而将新变更的模块替换旧的模块。原来如下：")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack热更新.jpeg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack%E7%83%AD%E6%9B%B4%E6%96%B0.jpeg",alt:""}})])]),e._v(" "),a("blockquote",[a("p",[e._v("server端和client端都做了哪些具体工作：")])]),e._v(" "),a("ul",[a("li",[e._v("1.第一步，在"),a("code",[e._v("Webpack")]),e._v("的"),a("code",[e._v("watch")]),e._v("模式下，文件系统中某一个文件发生修改，"),a("code",[e._v("Webpack")]),e._v("监听到文件变化，根据配置文件对模块重新编译打包，并将打包后的代码通过简单的JavaScript对象保存在内存中。")]),e._v(" "),a("li",[e._v("2.第二步是"),a("code",[e._v("Webpack-dev-server")]),e._v("和"),a("code",[e._v("Webpack")]),e._v("之间的接口交互，而在这一步，主要是"),a("code",[e._v("dev-server")]),e._v("的中间件"),a("code",[e._v("Webpack-dev-middleware")]),e._v("和"),a("code",[e._v("Webpack")]),e._v("之间的交互，"),a("code",[e._v("Webpack-dev-middleware")]),e._v("调用"),a("code",[e._v("Webpack")]),e._v("暴露的API对代码变化进行监控，并且告诉webpack，将代码打包到内存中。")]),e._v(" "),a("li",[e._v("3.第三步是"),a("code",[e._v("Webpack-dev-server")]),e._v("对文件变化的一个监控，这一步不同于第一步，并不是监控代码变化重新打包。当我们在配置文件中配置了"),a("code",[e._v("devServer.watchContentBase")]),e._v("为"),a("code",[e._v("true")]),e._v("的时候，"),a("code",[e._v("Server")]),e._v("会监听这些配置文件夹中静态文件的变化，变化后会通知浏览器端对应用进行"),a("code",[e._v("live reload")]),e._v("。注意，这儿是"),a("strong",[e._v("浏览器刷新")]),e._v("，和"),a("code",[e._v("HMR")]),e._v("是两个概念。")]),e._v(" "),a("li",[e._v("4.第四步也是"),a("code",[e._v("webpack-dev-server")]),e._v("代码的工作，该步骤主要是通过"),a("code",[e._v("sockjs")]),e._v("（"),a("code",[e._v("webpack-dev-server")]),e._v(" 的依赖）在浏览器端和服务端之间建立一个"),a("code",[e._v("websocket")]),e._v("长连接，将"),a("code",[e._v("Webpack")]),e._v("编译打包的各个阶段的状态信息告知浏览器端，同时也包括第三步中"),a("code",[e._v("Server")]),e._v("监听静态文件变化的信息。浏览器端根据这些"),a("code",[e._v("socket")]),e._v("消息进行不同的操作。当然服务端传递的最主要信息还是新模块的"),a("code",[e._v("hash")]),e._v(" 值，后面的步骤根据这一"),a("code",[e._v("hash")]),e._v("值来进行模块热替换。")]),e._v(" "),a("li",[e._v("5."),a("code",[e._v("webpack-dev-server/client")]),e._v("端并不能够请求更新的代码，也不会执行热更模块操作，而把这些工作又交回给了"),a("code",[e._v("Webpack")]),e._v("，"),a("code",[e._v("webpack/hot/dev-server")]),e._v("的工作就是根据"),a("code",[e._v("webpack-dev-server/client")]),e._v("传给它的信息以及"),a("code",[e._v("dev-server")]),e._v("的配置决定是"),a("strong",[e._v("刷新浏览器")]),e._v("呢还是进行"),a("strong",[e._v("模块热更新")]),e._v("。当然如果仅仅是刷新浏览器，也就没有后面那些步骤了。")]),e._v(" "),a("li",[e._v("6."),a("code",[e._v("HotModuleReplacement.runtime")]),e._v("是客户端"),a("code",[e._v("HMR")]),e._v("的中枢，它接收到上一步传递给他的新模块的"),a("code",[e._v("hash")]),e._v("值，它通过"),a("code",[e._v("JsonpMainTemplate.runtime")]),e._v("向"),a("code",[e._v("server")]),e._v("端发送"),a("code",[e._v("Ajax")]),e._v("请求，服务端返回一个"),a("code",[e._v("json")]),e._v("，该"),a("code",[e._v("json")]),e._v("包含了所有要更新的模块的"),a("code",[e._v("hash")]),e._v("值，获取到更新列表后，该模块再次通过"),a("code",[e._v("jsonp")]),e._v("请求，获取到最新的模块代码。这就是上图中 7、8、9 步骤。")]),e._v(" "),a("li",[e._v("7.而第 10 步是决定"),a("code",[e._v("HMR")]),e._v("成功与否的关键步骤，在该步骤中，"),a("code",[e._v("HotModulePlugin")]),e._v("将会对新旧模块进行对比，决定是否更新模块，在决定更新模块后，检查模块之间的依赖关系，更新模块的同时更新模块间的依赖引用。")]),e._v(" "),a("li",[e._v("8.最后一步，当"),a("code",[e._v("HMR失")]),e._v("败后，回退到"),a("code",[e._v("live reload")]),e._v("操作，也就是进行浏览器刷新来获取最新打包代码。")])]),e._v(" "),a("h2",{attrs:{id:"webpack-dev-server和http服务器如nginx有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server和http服务器如nginx有什么区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack-dev-server和http服务器如nginx有什么区别？")]),e._v(" "),a("p",[e._v("webpack-dev-server使用内存来存储Webpack开发环境下打包的文件，并且可以使用模块热更新，它比传统的http服务对开发更加简单高效。")]),e._v(" "),a("h2",{attrs:{id:"如何提高webpack的构建速度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何提高webpack的构建速度","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何提高webpack的构建速度?")]),e._v(" "),a("h3",{attrs:{id:"常规"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常规","aria-hidden":"true"}},[e._v("#")]),e._v(" 常规")]),e._v(" "),a("blockquote",[a("p",[e._v("保持版本最新\n使用最新稳定版本的webpack、node、npm等，较新的版本更够建立更高效的模块树以及提高解析速度。\n优化loaders配置")])]),e._v(" "),a("p",[e._v("由于loader对文件的转换操作很耗时，所以需要让尽可能少的文件被loader处理。我们可以通过以下3方面优化loader配置：")]),e._v(" "),a("ul",[a("li",[e._v("优化正则匹配")]),e._v(" "),a("li",[e._v("通过cacheDirectory选项开启缓存")]),e._v(" "),a("li",[e._v("通过include、exclude来减少被处理的文件")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// webpack.common.js\n\nmodule: {\n    rules: [\n        {\n            test:/\\.js$/,\n            //babel-loader支持缓存转换出的结果，通过cacheDirectory选项开启\n            loader:'babel-loader?cacheDirectory',\n            //只对项目根目录下的src 目录中的文件采用 babel-loader\n            include: [path.resolve('src')],\n            //排除 node_modules 目录下的文件，node_modules 目录下的文件都是采用的 ES5 语法，没必要再通过 Babel 去转换\n            exclude: path.resolve(__dirname, 'node_modules')\n        }\n    ]\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("blockquote",[a("p",[e._v("优化最小化css代码\n它是专门对css做压缩、去重的专门为cssnano做的一款插件用来提取用的")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style-loader', 'css-loader')\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css'),\n    new OptimizeCssAssetsPlugin({\n      assetNameRegExp: /\\.optimize\\.css$/g,\n      cssProcessor: require('cssnano'),\n      cssProcessorPluginOptions: {\n        preset: ['default', { discardComments: { removeAll: true } }],\n      },\n      canPrint: true\n    })\n  ]\n};\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br")])]),a("blockquote",[a("p",[e._v("optimization.splitChunks 提取公共代码")])]),e._v(" "),a("p",[a("code",[e._v("Webpack 4")]),e._v("移除了"),a("code",[e._v("CommonsChunkPlugin")]),e._v("取而代之的是两个新的配置项"),a("code",[e._v("optimization.splitChunks")]),e._v("和"),a("code",[e._v("optimization.runtimeChunk")]),e._v("来简化代码分割的配置。\n通过设置 "),a("code",[e._v('optimization.splitChunks.chunks: "all"')]),e._v(" 来启动默认的代码分割配置项。\n当满足如下条件时，"),a("code",[e._v("webpack")]),e._v(" 会自动打包 "),a("code",[e._v("chunks")]),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("当前模块是公共模块（多处引用）或者模块来自node_modules")]),e._v(" "),a("li",[e._v("当前模块大小大于30kb, 如果此模块是按需加载，并行请求的最大数量小于等于5")]),e._v(" "),a("li",[e._v("如果此模块在初始页面加载，并行请求的最大数量小于等于 3")])]),e._v(" "),a("p",[a("code",[e._v("runtimeChunk")]),e._v("的作用是将包含"),a("code",[e._v("chunks")]),e._v("映射关系的 "),a("code",[e._v("list")]),e._v("单独从 "),a("code",[e._v("app.js")]),e._v("里提取出来，因为每一个 "),a("code",[e._v("chunk")]),e._v(" 的 "),a("code",[e._v("id")]),e._v(" 基本都是基于内容 "),a("code",[e._v("hash")]),e._v(" 出来的，所以你每次改动都会影响它，如果不将它提取出来的话，等于"),a("code",[e._v("app.js")]),e._v("每次都会改变。缓存就失效了。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("optimization: {\n    runTimeChunk:{\n      name:'runtime'\n    },\n    splitChunks: {\n        chunks: 'async', 是否对异步代码进行的代码分割\n        //默认作用于异步chunk，值为all/initial/async/function(chunk),值为function时第一个参数为遍历所有入口chunk时的chunk模块，chunk._modules为gaichunk所有依赖的模块，通过chunk的名字和所有依赖模块的resource可以自由配置,会抽取所有满足条件chunk的公有模块，以及模块的所有依赖模块，包括css\n        minSize: 30000,  // 引入模块大于30kb才进行代码分割  //默认值是30kb\n        maxSize: 0, // 引入模块大于Xkb时，尝试对引入模块二次拆分引入\n        minChunks: 2, // 引入模块至被使用2次后才进行代码分割  //被多少模块共享\n        maxAsyncRequests: 5, //  //所有异步请求不得超过5个，最大请求数\n        maxInitialRequests: 3,  //初始话并行请求不得超过3个\n        automaticNameDelimiter: '~', // 模块间的连接符，默认为\"~\"\n        name: true,//打包后的名称，默认是chunk的名字通过分隔符（默认是～）分隔开，如vendor~\n        cacheGroups: {//对缓存的文件生效//设置缓存组用来抽取满足不同规则的chunk,下面以生成common为例\n            common: {\n              name: 'common',  //抽取的chunk的名字\n              chunks(chunk) { //同外层的参数配置，覆盖外层的chunks，以chunk为维度进行抽取\n              },\n              test(module, chunks) {  //可以为字符串，正则表达式，函数，以module为维度进行抽取，只要是满足条件的module都会被抽取到该common的chunk中，为函数时第一个参数是遍历到的每一个模块，第二个参数是每一个引用到该模块的chunks数组。自己尝试过程中发现不能提取出css，待进一步验证。\n              },\n              priority: 10,  //优先级，一个chunk很可能满足多个缓存组，会被抽取到优先级高的缓存组中\n              minChunks: 2,  //最少被几个chunk引用\n              reuseExistingChunk: true，//\t如果该chunk中引用了已经被抽取的chunk，直接引用该chunk，不会重复打包代码\n              enforce: true  // 如果cacheGroup中没有设置minSize，则据此判断是否使用上层的minSize，true：则使用0，false：使用上层minSize\n            }\n\n            vendors: {\n                test: /[\\\\/]node_modules[\\\\/]/,\n                priority: -10  // 优先级，越小优先级越高\n            },\n            default: {  // 默认设置，可被重写\n                minChunks: 2,\n                priority: -20,\n                reuseExistingChunk: true  // 如果本来已经把代码提取出来，则重用存在的而不是重新产生\n            }\n        }\n    }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br")])]),a("p",[e._v("为啥移除呢？\nCommonsChunkPlugin存在以下三个问题：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("1:产出的chunk在引入的时候，会包含重复的代码；")])]),e._v(" "),a("li",[a("p",[e._v("2: 无法优化异步chunk；")])]),e._v(" "),a("li",[a("p",[e._v("3:高优的chunk产出需要的minchunks配置比较复杂。")])])]),e._v(" "),a("p",[e._v("为了解决这些问题，webpack4中用splitchunks替代了CommonsChunkPlugin。")]),e._v(" "),a("blockquote",[a("p",[e._v("Smaller = false")])]),e._v(" "),a("p",[e._v("减少编译的整体大小，以提高构建性能。尽量保持"),a("code",[e._v("chunks")]),e._v("小巧。")]),e._v(" "),a("ul",[a("li",[e._v("使用更小/更少的库")]),e._v(" "),a("li",[e._v("移除不需要的代码")]),e._v(" "),a("li",[e._v("只编译你在开发的代码")])]),e._v(" "),a("blockquote",[a("p",[e._v("Worker Pool")])]),e._v(" "),a("p",[a("code",[e._v("thread-loader")]),e._v("可以将非常耗性能的"),a("code",[e._v("loaders")]),e._v("转存到"),a("code",[e._v("worker pool")]),e._v("中。\n不要使用太多的"),a("code",[e._v("workers")]),e._v("，因为"),a("code",[e._v("Node.js")]),e._v("的"),a("code",[e._v("runtime")]),e._v("和"),a("code",[e._v("loader")]),e._v("有一定的启动开销。最小化"),a("code",[e._v("workers")]),e._v("和主进程间的模块传输。进程间通讯("),a("code",[e._v("IPC")]),e._v(")是非常消耗资源的。")]),e._v(" "),a("p",[e._v("其实就是在多个线程上做计算\n**注意：**这个一般是在大项目上使用，在小项目上使用反而会加长构建时间。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        include: path.resolve("src"),\n        use: [\n          "thread-loader",\n          // your expensive loader (e.g babel-loader)\n        ]\n      }\n    ]\n  }\n}\n//with option\n{\n    loader: "thread-loader",\n    // loaders with equal options will share worker pools\n    options: {\n      // the number of spawned workers, defaults to (number of cpus - 1) or\n      // fallback to 1 when require(\'os\').cpus() is undefined\n      workers: 2,或者require(\'os\').cpus - 1\n \n      // number of jobs a worker processes in parallel\n      // defaults to 20\n      workerParallelJobs: 50,\n \n      // additional node.js arguments\n      workerNodeArgs: [\'--max-old-space-size=1024\'],\n \n      // Allow to respawn a dead worker pool\n      // respawning slows down the entire compilation\n      // and should be set to false for development\n      poolRespawn: false,\n \n      // timeout for killing the worker processes when idle\n      // defaults to 500 (ms)\n      // can be set to Infinity for watching builds to keep workers alive\n      poolTimeout: 2000,\n \n      // number of jobs the poll distributes to the workers\n      // defaults to 200\n      // decrease of less efficient but more fair distribution\n      poolParallelJobs: 50,\n \n      // name of the pool\n      // can be used to create different pools with elsewise identical options\n      name: "my-pool"\n    }\n  },\n  // your expensive loader (e.g babel-loader)\n  babel-loader\n  }\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br"),a("span",{staticClass:"line-number"},[e._v("51")]),a("br"),a("span",{staticClass:"line-number"},[e._v("52")]),a("br"),a("span",{staticClass:"line-number"},[e._v("53")]),a("br")])]),a("blockquote",[a("p",[e._v("持久化缓存")])]),e._v(" "),a("p",[e._v("对于一些性能开销较大的"),a("code",[e._v("loader")]),e._v("之前可以添加"),a("code",[e._v("cache-loader")]),e._v("，启用持久化缓存。\n使用"),a("code",[e._v("package.json")]),e._v("中的"),a("code",[e._v("postinstall")]),e._v("清楚缓存目录。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ext$/,\n        use: ['cache-loader', ...loaders],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("blockquote",[a("p",[e._v("Dlls")])]),e._v(" "),a("p",[e._v("使用"),a("code",[e._v("DllPlugin")]),e._v("将更新不频繁的代码进行单独编译。这将改善引用程序的编译速度。即使它增加了构建过程的复杂度。\n利用"),a("code",[e._v("DllPlugin")]),e._v("和"),a("code",[e._v("DllReferencePlugin")]),e._v("预编译资源模块， 通过"),a("code",[e._v("DllPlugin")]),e._v("来对那些我们引用但是绝对不会修改的"),a("code",[e._v("npm")]),e._v("包来进行预编译，再通过"),a("code",[e._v("DllReferencePlugin")]),e._v("将预编译的模块加载进来。")]),e._v(" "),a("blockquote",[a("p",[e._v("解析(resolve)")])]),e._v(" "),a("p",[e._v("以下几步可以提高解析速度：")]),e._v(" "),a("ul",[a("li",[e._v("通过externals踢出去一部分文件，防止打俩份，或者可以直接使用cdn")]),e._v(" "),a("li",[e._v("尽量减少"),a("code",[e._v("resolve.modules")]),e._v("、"),a("code",[e._v("resolve.extensions")]),e._v("、"),a("code",[e._v("resolve.mainFiles")]),e._v("、"),a("code",[e._v("resolve.desciriptionsFiles")]),e._v("中类目的数量，因为它们会增加文件系统的调用次数。")]),e._v(" "),a("li",[e._v("如果你不使用"),a("code",[e._v("symlinks")]),e._v("，可以设置"),a("code",[e._v("resolve.symlinks: false")])]),e._v(" "),a("li",[e._v("如果你使用自定义解析"),a("code",[e._v("plugins")]),e._v("，并且没有指定"),a("code",[e._v("context")]),e._v("信息，可以设置"),a("code",[e._v("resolve.cacheWithContext: false")])])]),e._v(" "),a("h3",{attrs:{id:"开发环境-development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发环境-development","aria-hidden":"true"}},[e._v("#")]),e._v(" 开发环境 Development")]),e._v(" "),a("blockquote",[a("p",[e._v("在内存中编译")])]),e._v(" "),a("p",[e._v("以下几个实用的工具通过在内存中进行代码的编译和资源的提供，但并不写入磁盘来提高性能：")]),e._v(" "),a("ul",[a("li",[e._v("webpack-dev-server")]),e._v(" "),a("li",[e._v("webpack-hot-middleware")]),e._v(" "),a("li",[e._v("webpack-dev-middleware")])]),e._v(" "),a("blockquote",[a("p",[e._v("Devtool")])]),e._v(" "),a("p",[e._v("需要注意在不同的"),a("code",[e._v("devtool")]),e._v("的设置，会导致不同的性能差异。")]),e._v(" "),a("p",[e._v("source-map 对于开发调试，打包速度还是影响很大的")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/source-map配置图.jpeg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/source-map%E9%85%8D%E7%BD%AE%E5%9B%BE.jpeg",alt:""}})])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("eval")]),e._v("具有最好的性能，但不能帮你转义代码,可以提升一个打包速度,会dist 目录下创建 .map 文件\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/source-map-eval.jpeg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/source-map-eval.jpeg",alt:""}})])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("inline")]),e._v(" 不产生独立的 .map 文件，而把 source-map 的内容以 dataURI的方式追加到 bundle 件末尾\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/source-map-inile.jpeg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/source-map-inile.jpeg",alt:""}})])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("cheap")]),e._v("忽略列信息,也就是出了问题只能定位到某一行，不能定位到这行的哪一列， cheap 主要是为了提升打包速度，很好理解嘛，只关注行，不关注列，生成map的速度肯定快啊~~")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("module")]),e._v(" module 的作用是 map 到 loader 处理前的文件，如果不加 module, 实际上是 map 到源文件经过对应 loader 处理后的样子。这个需要 loader 的支持")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("hidden-source-map")]),e._v(":就是不在 bundle 文件结尾处追加 sourceURL 指定其 sourcemap文件的位置，但是仍然会生成 sourcemap 文件。这样，浏览器开发者工具就无法应用sourcemap, 目的是避免把sourcemap文件发布到生产环境，造成源码泄露。而在生产环境应该用错误报告工具结合 sourcemap 文件来查找问题")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("nosources-source-map")]),e._v("：sourcemap 中不带有源码，这样，"),a("code",[e._v("sourcemap")]),e._v("可以部署到生产环境而不会造成源码泄露，同时一旦出了问题，"),a("code",[e._v("error stacks")]),e._v(" 中会显示准确的错误信息，比如发生在哪个源文件的哪一行，如图：\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/nosources-source-map.jpeg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/nosources-source-map.jpeg",alt:""}})])])]),e._v(" "),a("li",[a("p",[e._v("如果你能接受稍微差一些的"),a("code",[e._v("mapping")]),e._v("质量，你可以使用"),a("code",[e._v("cheap-source-map")]),e._v("选择来提高性能")])]),e._v(" "),a("li",[a("p",[e._v("使用"),a("code",[e._v("eval-source-map")]),e._v("配置进行增量编译")])])]),e._v(" "),a("p",[e._v("在大多数情况下，"),a("code",[e._v("cheap-module-eval-source-map")]),e._v("是最好的选择。")]),e._v(" "),a("blockquote",[a("p",[e._v("避免在生产环境在才会用到的工具")])]),e._v(" "),a("p",[e._v("某些实用工具，"),a("code",[e._v("plugins")]),e._v("和"),a("code",[e._v("loaders")]),e._v("都只能在构建生产环境时才使用。例如，在开发时使用"),a("code",[e._v("UglifyJsPlugin")]),e._v("来压缩和修改代码是没有意义的。以下这些工具在开发中通常被排除在外：")]),e._v(" "),a("ul",[a("li",[e._v("UglifyJsPlugin")]),e._v(" "),a("li",[e._v("ExtractTextPlugin")]),e._v(" "),a("li",[a("code",[e._v("[hash]/[chunkhash]")])]),e._v(" "),a("li",[e._v("AggressiveSplittingPlugin")]),e._v(" "),a("li",[e._v("AggressiveMergingPlugin")]),e._v(" "),a("li",[e._v("ModuleConcatenationPlugin")])]),e._v(" "),a("blockquote",[a("p",[e._v("最小化入口chunk")])]),e._v(" "),a("p",[e._v("webpack只会在文件系统中生成已更新的chunk。应当在生成入口chunk时，尽量减少入口chunk的体积，以提高性能。")]),e._v(" "),a("h3",{attrs:{id:"生产环境-production"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产环境-production","aria-hidden":"true"}},[e._v("#")]),e._v(" 生产环境 Production")]),e._v(" "),a("p",[e._v("不要为了非常小的性能增益，牺牲了你应用程序的质量！！请注意，在大多数情况下优化代码质量，比构建性能更重要。")]),e._v(" "),a("blockquote",[a("p",[e._v("多个编译时\n当进行多个编译时，以下工具可以帮助到你：")])]),e._v(" "),a("ul",[a("li",[a("code",[e._v("parallel-webpack")]),e._v(": 它允许编译工作在woker池中进行。")]),e._v(" "),a("li",[a("code",[e._v("cache-loader")]),e._v(": 缓存可以在多个编译之间共享。")])]),e._v(" "),a("h3",{attrs:{id:"工具相关问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具相关问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 工具相关问题")]),e._v(" "),a("blockquote",[a("p",[e._v("Babel\n项目中的"),a("code",[e._v("preset/plugins")]),e._v("数量最小化\nTypeScript")])]),e._v(" "),a("ul",[a("li",[e._v("在单独的进程中使用"),a("code",[e._v("fork-ts-checker-webpack-plugin")]),e._v("进行类型检查")]),e._v(" "),a("li",[e._v("配置"),a("code",[e._v("loaders")]),e._v("时跳过类型检查")]),e._v(" "),a("li",[e._v("使用"),a("code",[e._v("ts-loader")]),e._v("时，设置"),a("code",[e._v("happyPackMode: true")]),e._v("以及 "),a("code",[e._v("transpileOnly: true")])])]),e._v(" "),a("blockquote",[a("p",[e._v("Saas\n"),a("code",[e._v("node-sass")]),e._v("中有个来自"),a("code",[e._v("Node.js")]),e._v("线程池的阻塞线程的"),a("code",[e._v("bug")]),e._v("。当使用"),a("code",[e._v("thread-loader")]),e._v("时，需要设置"),a("code",[e._v("workParallelJobs: 2")])])]),e._v(" "),a("h2",{attrs:{id:"如何利用webpack来优化前端性能？（提高性能和体验）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何利用webpack来优化前端性能？（提高性能和体验）","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何利用Webpack来优化前端性能？（提高性能和体验）")]),e._v(" "),a("p",[e._v("用"),a("code",[e._v("Webpack")]),e._v("优化前端性能是指优化"),a("code",[e._v("Webpack")]),e._v("输出结果，让打包的结果在浏览器运行快速高效。")]),e._v(" "),a("ul",[a("li",[e._v("压缩代码。删除多余的代码/注释，简化代码的写法等等方式。可以利用"),a("code",[e._v("Webpack")]),e._v("的"),a("code",[e._v("UglifyJsPlugin")]),e._v("和"),a("code",[e._v("ParallelUglifyPlugin")]),e._v("来压缩"),a("code",[e._v("JavaScript")]),e._v("代码。利用"),a("code",[e._v("css-loader?minimize")]),e._v("来压缩CSS")]),e._v(" "),a("li",[e._v("压缩图片。利用"),a("code",[e._v("imagemin-webpack-plugin")]),e._v("等图片资源压缩插件，对引用的图片资源进行压缩处理")]),e._v(" "),a("li",[e._v("合理的图片资源引用。使用"),a("code",[e._v("url-loader")]),e._v("加载解析图片资源时，可以通过配置"),a("code",[e._v("options limit")]),e._v("参数，将较小的图片资源转换成"),a("code",[e._v("base64")]),e._v("格式，减少"),a("code",[e._v("http")]),e._v("请求")]),e._v(" "),a("li",[e._v("利用"),a("code",[e._v("CDN")]),e._v("加速。在构建过程中，将引用的静态资源路径修改为"),a("code",[e._v("CDN")]),e._v("上对应的路径。可以利用"),a("code",[e._v("Webpack")]),e._v("对于"),a("code",[e._v("output")]),e._v("参数和各个"),a("code",[e._v("loader")]),e._v("的"),a("code",[e._v("publicPath")]),e._v("参数来修改资源路径")]),e._v(" "),a("li",[e._v("删除死代码("),a("code",[e._v("Tree Shaking")]),e._v(")。将代码中没有引用的代码片段删除掉。可以通过在启动"),a("code",[e._v("Webpack")]),e._v("时追加参数"),a("code",[e._v("--optimize-minimize")]),e._v("来实现")]),e._v(" "),a("li",[e._v("提取公共代码")])]),e._v(" "),a("h2",{attrs:{id:"npm打包时需要注意哪些？如何利用webpack来更好的构建？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm打包时需要注意哪些？如何利用webpack来更好的构建？","aria-hidden":"true"}},[e._v("#")]),e._v(" npm打包时需要注意哪些？如何利用Webpack来更好的构建？")]),e._v(" "),a("blockquote",[a("p",[e._v("npm模块需要注意以下问题：")])]),e._v(" "),a("ul",[a("li",[e._v("要支持CommonJS模块化规范，所以打包后的最后结果也要支持该规则")]),e._v(" "),a("li",[e._v("npm模块使用者的环境是不确定的，很有可能并不支持ES6，所以打包的最后结果应该是采用ES5编写的。并且如果ES5是经过转换的，请最好连同SourceMap一同上传")]),e._v(" "),a("li",[e._v("npm包大小应该是尽量小（有些仓库会限制包大小）")]),e._v(" "),a("li",[e._v("发布的模块不能将依赖的模块也一同打包，应该让用户选择性的去自行安装。这样可以避免模块应用者再次打包时出现底层模块被重复打包的情况")]),e._v(" "),a("li",[e._v("UI组件类的模块应该将依赖的其它资源文件，例如.css文件也需要包含在发布的模块里")])]),e._v(" "),a("h2",{attrs:{id:"基于以上需要注意的问题，我们可以对于webpack配置做以下扩展和优化："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于以上需要注意的问题，我们可以对于webpack配置做以下扩展和优化：","aria-hidden":"true"}},[e._v("#")]),e._v(" 基于以上需要注意的问题，我们可以对于Webpack配置做以下扩展和优化：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("CommonJS")]),e._v("模块化规范的解决方案： 设置"),a("code",[e._v("output.libraryTarget='commonjs2'")]),e._v("使输出的代码符合"),a("code",[e._v("CommonJS2")]),e._v("模块化规范，以供给其它模块导入使用")]),e._v(" "),a("li",[e._v("输出ES5代码的解决方案：使用"),a("code",[e._v("babel-loader")]),e._v("把ES6代码转换成"),a("code",[e._v("ES5")]),e._v("的代码。再通过开启"),a("code",[e._v("devtool: 'cheap-module-eval-source-map'")]),e._v("输出"),a("code",[e._v("SourceMap")]),e._v("以发布调试")]),e._v(" "),a("li",[a("code",[e._v("npm")]),e._v("包大小尽量小的解决方案："),a("code",[e._v("Babel")]),e._v("在把"),a("code",[e._v("ES6")]),e._v("代码转换成"),a("code",[e._v("ES5")]),e._v("代码时会注入一些辅助函数，最终导致每个输出的文件中都包含这段辅助函数的代码，造成了代码的冗余。解决方法是修改"),a("code",[e._v(".babelrc")]),e._v("文件，为其加入"),a("code",[e._v("transform-runtime")]),e._v("插件")]),e._v(" "),a("li",[e._v("不能将依赖模块打包到"),a("code",[e._v("npm")]),e._v("模块中的解决方案：使用"),a("code",[e._v("externals")]),e._v("配置项来告诉"),a("code",[e._v("Webpack")]),e._v("哪些模块不需要打包")]),e._v(" "),a("li",[e._v("对于依赖的资源文件打包的解决方案：通过"),a("code",[e._v("css-loade")]),e._v("r和"),a("code",[e._v("extract-text-webpack-plugin")]),e._v("来实现，配置如下：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const ExtractTextPlugin = require('extract-text-webpack-plugin');\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ExtractTextPlugin.extract({ use: ['css-loader'] })  // 提取出chunk中的css到单独的文件中\n      }\n    ]  \n  },\n  plugins: [\n    new ExtractTextPlugin({ filename: 'index.css' })\n  ]\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h2",{attrs:{id:"分析工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析工具","aria-hidden":"true"}},[e._v("#")]),e._v(" 分析工具")]),e._v(" "),a("blockquote",[a("p",[e._v("speed-measure-webpack-plugin\n为你的原始配置包一层 smp.wrap 就可以了，接下来执行构建，你就能在 console 面板看到如它 demo 所示的各类型的模块的执行时长。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\nconst SpeedMeasurePlugin = require("speed-measure-webpack-plugin");\t\nconst smp = new SpeedMeasurePlugin();\t\nmodule.exports = smp.wrap(YourWebpackConfig);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("blockquote",[a("p",[e._v("webpack-bundle-awalyzer\n会把所有打包后的文件生成一份文档\nwebpack-jarvis\n这个比上一个\n叫美观和详细")])]),e._v(" "),a("h2",{attrs:{id:"如何优雅的编写你的entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优雅的编写你的entry","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何优雅的编写你的Entry")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('if (/.+\\/([a-zA-Z]+-[a-zA-Z]+)(\\.entry\\.js$)/g.test(item) == true) { const entrykey = RegExp.$1\n_entry[entrykey] = item;\nconst [dist, template] = entrykey.split(“-");\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"开发webpack-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发webpack-loader","aria-hidden":"true"}},[e._v("#")]),e._v(" 开发webpack loader")]),e._v(" "),a("h3",{attrs:{id:"loader源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader源码分析","aria-hidden":"true"}},[e._v("#")]),e._v(" loader源码分析")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/loader源码分析.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/loader%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.png",alt:""}})])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/loader源码分析code.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/loader%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90code.png",alt:""}})])]),e._v(" "),a("blockquote",[a("p",[e._v("⚠️注意：")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("1、一个 Loader 的职责是单一的，只需要完成一种转换。如果一个源文件需要经历多步转换才能正常使用，就通过多个 Loader 去转换。在调用多个 Loader 去转换一个文件时，每个 Loader 会链式的顺序执行， 第一个 Loader 将会拿到需处理的原内容，上一个 Loader 处理后的结果会传给下一个接着处理，最后的 Loader 将处理后的最终结果返回给 Webpack。")])]),e._v(" "),a("li",[a("p",[e._v("2、所以，在你开发一个 Loader 时，请保持其职责的单一性，你只需关心输入和输出。")])]),e._v(" "),a("li",[a("p",[e._v("3.use: ['bar-loader', 'foo-loader'] 时，loader 是以相反的顺序执行的")])]),e._v(" "),a("li",[a("p",[e._v("4.最后的 loader 最早调用，传入原始的资源内容(可能是代码，也可能是二进制文件，用 buffer 处理)第一个 loader 最后调用，期望返回是 JS 代码和 sourcemap 对象(可选)中间 的 loader 执行时，传入的是上一个 loader 执行的结果")])]),e._v(" "),a("li",[a("p",[e._v("5.多个 loader 时遵循这样的执行顺序，但对于大多数单个 loader 来说无须感知这一点，只负 责好处理接受的内容就好。")])]),e._v(" "),a("li",[a("p",[e._v("6.还有一个场景是 loader 中的异步处理。有一些 loader 在执行过程中可能依赖于外部 I/O 的结果，导致它必须使用异步的方式来处理，这个使用需要在 loader 执行时使用 this.async() 来标识该 loader 是异步处理的，然后使用 this.callback 来返回 loader 处理结果。")])])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/loader源码ast.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/loader%E6%BA%90%E7%A0%81ast.png",alt:""}})])]),e._v(" "),a("p",[e._v("在计算机科学中，抽象语法树(abstract syntax tree 或者缩写为 AST)，或者语法树(syntax tree)，是源 代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。树上的每个节点都表示源代码中的一种结 构。之所以说语法是「抽象」的，是因为这里的语法并不会表示出真实语法中出现的每个细节。")]),e._v(" "),a("p",[e._v("Webpack 提供的一个很大的便利就是能将所有资源都整合成模块，不仅仅是 js 文件。所以需要一些loader ，比如 url-loader 等等来让我们可以直接在源文件中引用各类资源。最后调用 acorn(Esprima) 解析经 loader 处理后的源文件生成抽象语法树 AST")]),e._v(" "),a("ul",[a("li",[e._v("type:描述该语句的类型 --变量声明语句")]),e._v(" "),a("li",[e._v("kind:变量声明的关键字 -- var")]),e._v(" "),a("li",[e._v("declaration: 声明的内容数组，里面的每一项也是一个对象 type: 描述该语句的类型")]),e._v(" "),a("li",[e._v("id: 描述变量名称的对象 type:定义")]),e._v(" "),a("li",[e._v("name: 是变量的名字 init: 初始化变量值得对象")]),e._v(" "),a("li",[e._v("type: 类型")]),e._v(" "),a("li",[e._v('value: 值 "is tree" 不带引号 row: ""is tree"" 带引号')])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://raw.githubusercontent.cwom/ColaStar/static/master/images/手写loader.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/%E6%89%8B%E5%86%99loader.png",alt:""}})])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//入口文件\nconst a = 20;\n-------------------------\nloader/index.js\n-------------------------\n//loader执行之前\nmodule.exports.pitch = function(r1,r2,data){\n    data.value = 'yd';\n}\n//同步loader\nmodule.exports = function(content, map, meta){\n    console.log('得到的数据', content);//将const a = 20;转化成buffer <Buffer xxxxx ... >\n    console.log('loader预先得到的数据', this.data.value);//yd\n    return '{};'+content;\n    // this.callback(null, content, map, meta);\n};\n//异步loader\nmodule.exports = function(content, map, meta){\n var callback = this.async();\n (funciton(){....}).then(function(){\n     if(err){\n         callback(err);\n     }else{\n         callback(null, ......)\n     }\n })\n};\n//流的方式\n//module.exports.raw = true;\n-----------------------------------\nwebpack.config.js\n-----------------------------------\nconst path = require('path');\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                loader: path.resolve('./loader/index.js')\n            }\n        ]\n    }\n};\n\n//最后生成代码\neval(\"{};const a = 20;\\r\\n\\r\\n//import bar from './bar.js';\\r\\n//bar.init();\\n\\n//# sourceURL=webpack:///./src/index.js?\");\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br")])]),a("h2",{attrs:{id:"编写过webpack插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写过webpack插件","aria-hidden":"true"}},[e._v("#")]),e._v(" 编写过webpack插件")]),e._v(" "),a("p",[e._v("webpack实现插件机制的⼤大体⽅方式是:")]),e._v(" "),a("ul",[a("li",[e._v("「创建」—— webpack在其内部对象上创建各种钩⼦;")]),e._v(" "),a("li",[e._v("「注册」—— 插件将⾃己的方法注册到对应钩⼦子上，交给webpack;")]),e._v(" "),a("li",[e._v("「调⽤」—— webpack编译过程中，会适时地触发相应钩⼦子，因此也 就触发了插件的⽅法。")])]),e._v(" "),a("p",[e._v("打开 Webpack 4.0 的源码中一定会看到下面这些以 Sync、Async 开头，以 Hook 结尾的方法，这些都是 tapable 核心库的类，为我们提供不同的事件流执行机制，我们称为 “钩子”。")]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/tapable.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/tapable.png",alt:""}})])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// 引入 tapable 如下\nconst {\n    SyncHook,  //串行同步执行，不关心事件处理函数的返回值，在触发事件之后，会按照事件注册的先后顺序执行所有的事件处理函数。\n    SyncBailHook, //同样为串行同步执行，如果事件处理函数执行时有一个返回值不为空（即返回值为 undefined），则跳过剩下未执行的事件处理函数（如类的名字，意义在于保险）。\n    SyncWaterfallHook, // 为串行同步执行，上一个事件处理函数的返回值作为参数传递给下一个事件处理函数，依次类推，正因如此，只有第一个事件处理函数的参数可以通过 call 传递，而 call 的返回值为最后一个事件处理函数的返回值。\n    SyncLoopHook, // 为串行同步执行，事件处理函数返回 true 表示继续循环，即循环执行当前事件处理函数，返回 undefined 表示结束循环，SyncLoopHook 与 SyncBailHook 的循环不同，SyncBailHook 只决定是否继续向下执行后面的事件处理函数，而 SyncLoopHook 的循环是指循环执行每一个事件处理函数，直到返回 undefined 为止，才会继续向下执行其他事件处理函数，执行机制同理。\n    AsyncParallelHook, //异步并行执行,通过 tapAsync 注册的事件，通过 callAsync 触发，通过 tapPromise 注册的事件，通过 promise 触发（返回值可以调用 then 方法）。\n    AsyncParallelBailHook,异步并行执行，返回值不为 undefined，即有返回值，则立即停止向下执行其他事件处理函数，\n    AsyncSeriesHook, //异步串行同上\n    SyncBailHook。\n    AsyncSeriesBailHook,\n    AsyncSeriesWaterfallHook\n } = require("tapable");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[e._v("详细"),a("a",{attrs:{href:"https://www.jianshu.com/p/273e1c9904d2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webpack 核心模块 tapable 解析"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("上面的实现事件流机制的 “钩子” 大方向可以分为两个类别，“同步” 和 “异步”，“异步” 又分为两个类别，“并行” 和 “串行”，而 “同步” 的钩子都是串行的。")]),e._v(" "),a("p",[e._v("webpack 利用了 tapable 这个库("),a("a",{attrs:{href:"https://github.com/webpack/tapable",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1),e._v(")来协助实现对于整个 构建流程各个步骤的控制。 tapable 定义了主要构建流程后，使用 tapable 这个库添加了各种各样的 钩子方法来将 webpack 扩展至功能十分丰富,这就是plugin 的机制。也可以说webpack核心使用Tapable 来实现插件(plugins)的binding和applying.Tapable是一个用于事件发布订阅执行的插件架构。Tapable就是webpack用来创建钩子的库。")]),e._v(" "),a("p",[e._v("那么让我们打开webpack->package.json->main -> webpac.js 一起分析~")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("创建 Compiler -> \n调用 compiler.run 开始构建 -> \n创建 Compilation -> \n基于配置开始创建 Chunk -> \n使用 Parser 从 Chunk 开始解析依赖 -> \n使用 Module 和 Dependency 管理代码模块相互关系 -> \n 使用 Template 基于 Compilation 的数据生成结果代码\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/plugin1.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/plugin1.png",alt:""}})])]),e._v(" "),a("p",[e._v("⚠️注意：")]),e._v(" "),a("ul",[a("li",[e._v("1.事件钩子会有不同的类型 SyncBailHook，AsyncSeriesHook，SyncHook等。")]),e._v(" "),a("li",[e._v("2.如果是异步的事件钩子，那么可以使用 tapPromise 或者 tapAsync 来注册事件函数， tapPromise 要求方法返回 Promise 以便处理异 步，而 tapAsync 则是需要用 callback 来返回结 果。")]),e._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li")])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("compiler.hooks.done.tapPromise('PluginName', (stats) => {\n   return new Promise((resolve, reject) => {\n// 处理promise的返回结果 reject(err) : resolve()})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("ul",[a("li",[a("p",[e._v("4.compiler.hooks.done.tapAsync('PluginName', (stats, callback) => { callback(err)) })")])]),e._v(" "),a("li",[a("p",[e._v("5.除了同步和异步的，名称带有 parallel 的，注册的事件函数会并行调用，名称带有 bail 的，注册的事件函数会被顺序调用，直至一个处理方法有返回值名称带有 waterfall 的，每个 注册的事件函数，会将上一个方法的返回结果作为输入参数。有一些类型是可以结合到一起 的，如 AsyncParallelBailHook，这样它就具备了更加多样化的特性。")])])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/手写webpack插件.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/%E6%89%8B%E5%86%99webpack%E6%8F%92%E4%BB%B6.png",alt:""}})])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("compiler.hooks.done.tapPromise('PluginName', (stats) => {\n    return new Promise((resolve, reject) => {\n    // 处理promise的返回结果 reject(err) : resolve()\n});\ncompiler.hooks.done.tapAsync('PluginName', (stats, callback) => {\n    callback( err)) \n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("ul",[a("li",[e._v("1、Webpack 通过 Plugin 机制让其更加灵活，以适应各种应用场景。在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。")]),e._v(" "),a("li",[e._v("2、Webpack 启动后，在读取配置的过程中会先执行 new BasicPlugin(options) 初始化一个 BasicPlugin 获得其实例。在初始化 compiler 对象后，再调用 basicPlugin.apply(compiler) 给插件实例传入 compiler 对象。插件实例在获取到 compiler 对象后，就可以通过 compiler.plugin(事件名称, 回调函数) 监听到 Webpack 广播出来的事件。并且可以通过 compiler 对象去操作 Webpack。")]),e._v(" "),a("li",[e._v("3、在开发 Plugin 时最常用的两个对象就是 Compiler 和 Compilation，它们是 Plugin 和 Webpack 之间的桥梁。Compiler 和 Compilation 的含义如下：Compiler 对象包含了 Webpack 环境所有的的配置信息，包含 options，loaders，plugins 这些信息，这个对象在 Webpack 启动时候被实例化，它是全局唯一的，可以简单地把它理解为 Webpack 实例；Compilation 对象包含了当前的模块资源、编译生成资源、变化的文件等。当 Webpack 以开发模式运行时，每当检测到一个文件变化，一次新的 Compilation 将被创建。Compilation 对象也提供了很多事件回调供插件做扩展。通过 Compilation 也能读取到 Compiler 对象。")]),e._v(" "),a("li",[e._v("4、Compiler 和 Compilation 的区别在于：Compiler 代表了整个 Webpack 从启动到关闭的生命周期，而 Compilation 只是代表了一次新的编译。")]),e._v(" "),a("li",[e._v("5、开发插件时需要注意：只要能拿到 Compiler 或 Compilation 对象，就能广播出新的事件，所以在新开发的插件中也能广播出事件，给其它插件监听使用、传给每个插件的 Compiler 和 Compilation 对象都是同一个引用。也就是说在一个插件中修改了 Compiler 或 Compilation 对象上的属性，会影响到后面的插件、有些事件是异步的，这些异步的事件会附带两个参数，第二个参数为回调函数，在插件处理完任务时需要调用回调函数通知 Webpack，才会进入下一处理流程。")])]),e._v(" "),a("h2",{attrs:{id:"webpack编译过程或构建流程是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack编译过程或构建流程是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack编译过程或构建流程是什么？")]),e._v(" "),a("p",[e._v("Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程，")]),e._v(" "),a("ul",[a("li",[e._v("1、初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；")]),e._v(" "),a("li",[e._v("2、开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译；")]),e._v(" "),a("li",[e._v("3、确定入口：根据配置中的 entry 找出所有的入口文件；")]),e._v(" "),a("li",[e._v("4、编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；")]),e._v(" "),a("li",[e._v("5、完成模块编译：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；")]),e._v(" "),a("li",[e._v("6、输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；")]),e._v(" "),a("li",[e._v("7、输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。在以上过程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果。")])]),e._v(" "),a("p",[e._v("详细的可以看下边的源码分析")]),e._v(" "),a("h2",{attrs:{id:"webpack整体运行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack整体运行流程","aria-hidden":"true"}},[e._v("#")]),e._v(" Webpack整体运行流程")]),e._v(" "),a("p",[e._v("=======")]),e._v(" "),a("h2",{attrs:{id:"webpack整体运行流程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack整体运行流程-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Webpack整体运行流程")]),e._v(" "),a("p",[e._v("webpack 本质上就是一个 JS Module Bundler，用于将多个代码模块进行打包。bundler 从一个构 建入口出发，解析代码，分析出代码模块依赖关系，然后将依赖的代码模块组合在一起，在 JavaScript bundler 中，还需要提供一些胶水代码让多个代码模块可以协同工作，相互引用。下边会 举一些简单的例子来说明一下这几个关键的部分是怎么工作的。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 分别将各个依赖模块的代码⽤ modules 的⽅式组织起来打包成⼀个⽂件\n================================entry======================================\n// entry.js\nimport { bar } from './bar.js'; // 依赖 ./bar.js 模块 \n\n// bar.js\nconst foo = require('./foo.js'); // 依赖 ./foo.js 模块\n\n递归下去，直至没有更多的依赖模块，最终形成一颗模块依赖树。\n\n分析出依赖关系后，webpack 会利用 JavaScript Function 的特性提供一些代码来将各个模块整 合到一起，即是将每一个模块包装成一个 JS Function，提供一个引用依赖模块的方法，如下面例子 中的 __webpack__require__，这样做，既可以避免变量相互干扰，又能够有效控制执行顺序\n\n================================moudles====================================== \n// entry.js\nmodules['./entry.js'] = function() {\nconst { bar } = __webpack__require__('./bar.js')\n}\n\n// bar.js\n modules['./bar.js'] = function() {\n    const foo = __webpack__require__('./foo.js')\n };\n // foo.js\n modules['./foo.js'] = function() {\n    // ... \n }\n\n// 分别将各个依赖模块的代码用 modules 的方式组织起来打包成一个文件 \n\n================================output===========================\n// 已经执⾏的代码模块结果会保存在这⾥\n(function(modules){\n    const installedModules = {}\n    function __webpack__require__(id) {\n        // 如果 installedModules 中有就直接获取\n        // 没有的话从 modules 中获取 function 然后执⾏，\n        //将结果缓存在 installedModules 中然后返回结果\n    }\n})({\n    \"./entry.js\": (function(__webpack_require__){\n        var bar = __webpack_require__(/*code内容*/)\n    }),\n    \"./bar.js\": (function(){}),\n    \"./foo.js\": (function(){}),\n})\n其实webpack就是把AST分析树 转化成 链表\n\n// 如果 installedModules 中有就直接获取\n// 没有的话从 modules 中获取 function 然后执行，\n//将结果缓存在 installedModules 中然后返回结果 \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br")])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack_整体行流程.png"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack_%E6%95%B4%E4%BD%93%E8%A1%8C%E6%B5%81%E7%A8%8B.png",alt:""}})])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("1."),a("code",[e._v("Compiler")]),e._v(" webpack 的运行入口，"),a("code",[e._v("compiler")]),e._v("对象代表了完整的 "),a("code",[e._v("webpack")]),e._v(" 环境配置。这个对象 在启动 "),a("code",[e._v("webpack")]),e._v(" 时被一次性建立，并配置好所有可操作的设置，包括 "),a("code",[e._v("options")]),e._v("，"),a("code",[e._v("loader")]),e._v(" 和 "),a("code",[e._v("plugin")]),e._v("。当在 "),a("code",[e._v("webpack")]),e._v(" 环境中应用一个插件时，插件将收到此 "),a("code",[e._v("compiler")]),e._v(" 对象的引用，可以使用 它来访问 "),a("code",[e._v("webpack")]),e._v(" 的主环境。")])]),e._v(" "),a("li",[a("p",[e._v("2."),a("code",[e._v("Compilation")]),e._v(" 对象代表了一次资源版本构建。当运行 "),a("code",[e._v("webpack")]),e._v(" 开发环境中间件时，每当检 测到一个文件变化，就会创建一个新的 "),a("code",[e._v("compilation")]),e._v("，从而生成一组新的编译资源。一个 "),a("code",[e._v("compilation")]),e._v(" 对象表现了当前的模块资源、编译生成资源、变化的文件、以及被跟踪依赖的状 态信息。"),a("code",[e._v("compilation")]),e._v("对象也提供了很多关键步骤的回调，以供插件做自定义处理时选择使 用。")])]),e._v(" "),a("li",[a("p",[e._v("3."),a("code",[e._v("Chunk")]),e._v("，即用于表示 "),a("code",[e._v("chunk")]),e._v(" 的类，对于构建时需要的 "),a("code",[e._v("chunk")]),e._v(" 对象由 "),a("code",[e._v("Compilation")]),e._v(" 创建后保存 管理("),a("strong",[e._v("webpack中最核心的负责编译的Compiler和负责创建bundles的Compilation都是Tapable的实 例")]),e._v(")")])]),e._v(" "),a("li",[a("p",[e._v("4."),a("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/Module.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Module"),a("OutboundLink")],1),e._v("，用于表示代码 模块的基础类，衍生出很多子类用于处理不同的情况("),a("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/NormalModule.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("NormalModule"),a("OutboundLink")],1),e._v(")关于代码模块的所有信息都会存在 Module 实例中，例如 dependencies 记录代码模块的依赖等,当一个 "),a("code",[e._v("Module")]),e._v(" 实例被创建后，比较重要的一步是执行 "),a("code",[e._v("compilation.buildModule")]),e._v("这个方法，它 会调用 "),a("code",[e._v("Module")]),e._v(" 实例的 "),a("code",[e._v("build")]),e._v(" 方法来创建 "),a("code",[e._v("Module")]),e._v(" 实例需要的一些东西，然后调用自身的 "),a("code",[e._v("runLoaders")]),e._v(" 方法。"),a("code",[e._v("runLoaders")]),e._v(":"),a("a",{attrs:{href:"https://github.com/webpack/loader-runner",target:"_blank",rel:"noopener noreferrer"}},[e._v("loader-runner"),a("OutboundLink")],1),e._v("，执 行对应的 "),a("code",[e._v("loaders")]),e._v("，将代码源码内容一一交由配置中指定的 "),a("code",[e._v("loader")]),e._v(" 处理后，再把处理的结果保 存起来。")])]),e._v(" "),a("li",[a("p",[e._v("5."),a("code",[e._v("Parser")]),e._v("，其中相对复杂的一个部分，基于 "),a("code",[e._v("acorn")]),e._v(" 来分析 "),a("code",[e._v("AST")]),e._v(" 语法树，解析出代码模块的依 赖")])]),e._v(" "),a("li",[a("p",[e._v("6."),a("code",[e._v("Dependency")]),e._v("，解析时用于保存代码模块对应的依赖使用的对象。 "),a("code",[e._v("Module")]),e._v(" 实例的 "),a("code",[e._v("build")]),e._v(" 方法 在执行完对应的 "),a("code",[e._v("loader")]),e._v("时，处理完模块代码自身的转换后，继续调用 "),a("code",[e._v("Parser")]),e._v(" 的实例来解析自 身依赖的模块，解析后的结果存放在 "),a("code",[e._v("module.dependencies")]),e._v(" 中，首先保存的是依赖的路径，后续会经由 "),a("code",[e._v("compilation.processModuleDependencies")]),e._v(" 方法，再来处理各个依赖模块，递归地去建立 整个依赖。")])]),e._v(" "),a("li",[a("p",[e._v("7."),a("code",[e._v("Template")]),e._v("，生成最终代码要使用到的代码模板，像上述提到的胶水代码就是用对应的 "),a("code",[e._v("Template")]),e._v(" 来生成。\n"),a("code",[e._v("Template")]),e._v(" 基础类:"),a("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/Template.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/Template.js"),a("OutboundLink")],1),e._v("\n常用的主要 "),a("code",[e._v("Template")]),e._v(" 类:"),a("a",{attrs:{href:"https://github.com/webpack/webpack/blob/master/lib/MainTemplate.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/MainTemplate.js"),a("OutboundLink")],1)])])]),e._v(" "),a("h2",{attrs:{id:"源码分析webpack执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码分析webpack执行流程","aria-hidden":"true"}},[e._v("#")]),e._v(" 源码分析webpack执行流程")]),e._v(" "),a("blockquote",[a("p",[e._v("执行过程\n"),a("a",{attrs:{"data-fancybox":"",title:"",href:"https://colastar.github.io/static/images/webpack-cli执行流程源码.jpg"}},[a("img",{attrs:{src:"https://colastar.github.io/static/images/webpack-cli%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E6%BA%90%E7%A0%81.jpg",alt:""}})])])]),e._v(" "),a("ul",[a("li",[e._v("1.webpack.config.js,shell options参数解析")]),e._v(" "),a("li",[e._v("2.new webpack(options)")]),e._v(" "),a("li",[e._v("3.run() 编译的入口方法")]),e._v(" "),a("li",[e._v("4.compile() 触发make事件")]),e._v(" "),a("li",[e._v("5.addEntry() 找到js文件，进行下一步模块绑定")]),e._v(" "),a("li",[e._v("6._addModuleChain() 解析js入口文件，创建模块")]),e._v(" "),a("li",[e._v("7.buildModule() 编译模块，loader处理与acorn处理AST语法树")]),e._v(" "),a("li",[e._v("8.seal() 每一个chunk对应一个入口文件")]),e._v(" "),a("li",[e._v("9.createChunkAssets() 生成资源文件")]),e._v(" "),a("li",[e._v("10.MainTemplate.render() __webpack__require()引入")]),e._v(" "),a("li",[e._v("11.ModuleTemplate.render() 生成模版")]),e._v(" "),a("li",[e._v("12.module.source() 将生成好的js保存在compilation.assets中")]),e._v(" "),a("li",[e._v("13.Compiler.emitAssets()通过emitAssets将最终的js输出到output的path中")])]),e._v(" "),a("blockquote",[a("p",[e._v("1.参数解析")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(function(){\n    yargs.options({...})\n    \n    yargs.parse(process.argv.slice(2), (err, argv, output) => {...})\n})()\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("blockquote",[a("p",[e._v("加载webpack.config.js")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('(function(){\n    ...\n    yargs.parse(process.argv.slice(2), (err, argv, output) => {\n        ...\n        //解析argv，拿到配置文件参数\n       let options =  require("./convert-argv")(argv);\n       function processOptions(options){\n           ...\n       } \n        \n       processOptions(options);\n    })\n})()\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("blockquote",[a("p",[e._v("执行webpack()")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('(function(){\n    ...\n    yargs.parse(process.argv.slice(2), (err, argv, output) => {\n        ...\n        //解析argv，拿到配置文件参数\n       let options =  require("./convert-argv")(argv);\n       function processOptions(options){\n           ...\n           const webpack = require("webpack");\n           compiler = webpack(options);   \n       } \n        \n       processOptions(options);\n    })\n})()\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("blockquote",[a("p",[e._v("webpack.js")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const webpack = (options, callback) => {\n    \n    //验证webpack.config.js合法性\n    const webpackOptionsValidationErrors = validateSchema(\n        webpackOptionsSchema,\n        options\n    );\n    \n    /*\n        [\n          { entry: './index1.js', output: { filename: 'bundle1.js' } },\n          { entry: './index2.js', output: { filename: 'bundle2.js' } }\n        ]\n    */\n    if (Array.isArray(options)) {\n        compiler = new MultiCompiler(options.map(options => webpack(options)));\n    } else if(typeof options === \"object\"){\n        ...\n        //创建一个comiler对象\n        compiler = new Compiler(options.context);\n        \n        //往comiler中注册插件\n        new NodeEnvironmentPlugin().apply(compiler);\n        \n        //执行config中配置的插件\n        if (options.plugins && Array.isArray(options.plugins)) {\n            for (const plugin of options.plugins) {\n                if (typeof plugin === \"function\") {\n                    plugin.call(compiler, compiler);\n                } else {\n                    plugin.apply(compiler);\n                }\n            }\n        }\n        \n        //执行插件environment生命周期钩子方法\n        compiler.hooks.environment.call();\n        compiler.hooks.afterEnvironment.call();\n        //执行webpack内置插件\n        compiler.options = new\n        WebpackOptionsApply().process(options, compiler);\n    }else {\n        throw new Error(\"Invalid argument: options\");\n    }\n    \n    if (callback) {\n        ...\n        //调用compiler.run开始编译\n        compiler.run(callback);\n    }\n    //将compiler对象返回\n    return compiler\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br"),a("span",{staticClass:"line-number"},[e._v("51")]),a("br"),a("span",{staticClass:"line-number"},[e._v("52")]),a("br"),a("span",{staticClass:"line-number"},[e._v("53")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//NodeEnvironmentPlugin.js\nclass NodeEnvironmentPlugin {\n    apply(compiler) {\n        ...\n        compiler.hooks.beforeRun.tap("NodeEnvironmentPlugin", compiler => {\n            if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n        });\n    }\n}\nmodule.exports = NodeEnvironmentPlugin;\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class WebpackOptionsApply extends OptionsApply {\n    constructor() {\n        super();\n    }\n    process(options, compiler) {\n        //挂载配置，执行插件\n        let ExternalsPlugin;\n        compiler.outputPath = options.output.path;\n        compiler.recordsInputPath = options.recordsInputPath || options.recordsPath;\n        compiler.recordsOutputPath =\n            options.recordsOutputPath || options.recordsPath;\n        compiler.name = options.name;\n        \n        new EntryOptionPlugin().apply(compiler);\n        new HarmonyModulesPlugin(options.module).apply(compiler);\n        new LoaderPlugin().apply(compiler);\n        ...\n    }\n}\n\nmodule.exports = WebpackOptionsApply;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br")])]),a("blockquote",[a("p",[e._v("compiler.run() 开始编译")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class Compiler extends Tapable{\n    constructor(context){\n        ...\n    }\n    watch(){...}\n    run(callback){\n        ...\n        const onCompiled = (err, compilation){\n            ...\n        } \n        //执行生命周期钩子\n        this.hooks.beforeRun.callAsync(this, err => {\n              ...\n            this.hooks.run.callAsync(this, err =>{\n                this.readRecords(err =>{\n                    ...\n                    //开始编译\n                    this.compile(onCompiled);\n                })\n            }\n        }\n    }\n    compile(callback) {\n        //拿到参数\n        const params = this.newCompilationParams();\n        //执行编译前钩子\n        this.hooks.beforeCompile.callAsync(params, err => {\n            ...\n            \n            //创建compilation对象\n            const compilation = this.newCompilation(params);\n            \n            //开始构建模块对象\n            this.hooks.make.callAsync(compilation, err =>{\n                \n            })\n        }\n    }\n    createCompilation() {\n        //创建comilation对象\n        return new Compilation(this);\n    }\n    newCompilation(params) {\n        //调用创建compilation对象方法\n        const compilation = this.createCompilation();\n    }\n}\n\nmodule.exports = Compiler;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br")])]),a("blockquote",[a("p",[e._v("创建 Compilation()")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class Compilation extends Tapable {\n    constructor(compiler) {\n        super();\n        ...\n        //初始化配置\n        this.compiler = compiler;\n        this.resolverFactory = compiler.resolverFactory;\n        this.inputFileSystem = compiler.inputFileSystem;\n        this.requestShortener = compiler.requestShortener;\n        \n        //初始化模版\n        this.mainTemplate = new MainTemplate(this.outputOptions);\n        this.chunkTemplate = new ChunkTemplate(this.outputOptions);\n        this.hotUpdateChunkTemplate = new HotUpdateChunkTemplate(\n            this.outputOptions\n        );\n    }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('class MainTemplate extends Tapable {\n    this.hooks.requireExtensions.tap("MainTemplate", (source, chunk, hash) => {\n            const buf = [];\n            const chunkMaps = chunk.getChunkMaps();\n            // Check if there are non initial chunks which need to be imported using require-ensure\n            if (Object.keys(chunkMaps.hash).length) {\n                buf.push("// This file contains only the entry chunk.");\n                buf.push("// The chunk loading function for additional chunks");\n                buf.push(`${this.requireFn}.e = function requireEnsure(chunkId) {`);\n                buf.push(Template.indent("var promises = [];"));\n                buf.push(\n                    Template.indent(\n                        this.hooks.requireEnsure.call("", chunk, hash, "chunkId")\n                    )\n                );\n                buf.push(Template.indent("return Promise.all(promises);"));\n                buf.push("};");\n            } else if (\n                chunk.hasModuleInGraph(m =>\n                    m.blocks.some(b => b.chunkGroup && b.chunkGroup.chunks.length > 0)\n                )\n            ) {\n                // There async blocks in the graph, so we need to add an empty requireEnsure\n                // function anyway. This can happen with multiple entrypoints.\n                buf.push("// The chunk loading function for additional chunks");\n                buf.push("// Since all referenced chunks are already included");\n                buf.push("// in this file, this function is empty here.");\n                buf.push(`${this.requireFn}.e = function requireEnsure() {`);\n                buf.push(Template.indent("return Promise.resolve();"));\n                buf.push("};");\n            }\n            buf.push("");\n            buf.push("// expose the modules object (__webpack_modules__)");\n            buf.push(`${this.requireFn}.m = modules;`);\n\n            buf.push("");\n            buf.push("// expose the module cache");\n            buf.push(`${this.requireFn}.c = installedModules;`);\n\n            buf.push("");\n            buf.push("// define getter function for harmony exports");\n            buf.push(`${this.requireFn}.d = function(exports, name, getter) {`);\n            buf.push(\n                Template.indent([\n                    `if(!${this.requireFn}.o(exports, name)) {`,\n                    Template.indent([\n                        "Object.defineProperty(exports, name, { enumerable: true, get: getter });"\n                    ]),\n                    "}"\n                ])\n            );\n            buf.push("};");\n\n            buf.push("");\n            buf.push("// define __esModule on exports");\n            buf.push(`${this.requireFn}.r = function(exports) {`);\n            buf.push(\n                Template.indent([\n                    "if(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {",\n                    Template.indent([\n                        "Object.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });"\n                    ]),\n                    "}",\n                    "Object.defineProperty(exports, \'__esModule\', { value: true });"\n                ])\n            );\n            buf.push("};");\n\n            buf.push("");\n            buf.push("// create a fake namespace object");\n            buf.push("// mode & 1: value is a module id, require it");\n            buf.push("// mode & 2: merge all properties of value into the ns");\n            buf.push("// mode & 4: return value when already ns object");\n            buf.push("// mode & 8|1: behave like require");\n            buf.push(`${this.requireFn}.t = function(value, mode) {`);\n            buf.push(\n                Template.indent([\n                    `if(mode & 1) value = ${this.requireFn}(value);`,\n                    `if(mode & 8) return value;`,\n                    "if((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;",\n                    "var ns = Object.create(null);",\n                    `${this.requireFn}.r(ns);`,\n                    "Object.defineProperty(ns, \'default\', { enumerable: true, value: value });",\n                    "if(mode & 2 && typeof value != \'string\') for(var key in value) " +\n                        `${this.requireFn}.d(ns, key, function(key) { ` +\n                        "return value[key]; " +\n                        "}.bind(null, key));",\n                    "return ns;"\n                ])\n            );\n            buf.push("};");\n\n            buf.push("");\n            buf.push(\n                "// getDefaultExport function for compatibility with non-harmony modules"\n            );\n            buf.push(this.requireFn + ".n = function(module) {");\n            buf.push(\n                Template.indent([\n                    "var getter = module && module.__esModule ?",\n                    Template.indent([\n                        "function getDefault() { return module[\'default\']; } :",\n                        "function getModuleExports() { return module; };"\n                    ]),\n                    `${this.requireFn}.d(getter, \'a\', getter);`,\n                    "return getter;"\n                ])\n            );\n            buf.push("};");\n\n            buf.push("");\n            buf.push("// Object.prototype.hasOwnProperty.call");\n            buf.push(\n                `${\n                    this.requireFn\n                }.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };`\n            );\n\n            const publicPath = this.getPublicPath({\n                hash: hash\n            });\n            buf.push("");\n            buf.push("// __webpack_public_path__");\n            buf.push(`${this.requireFn}.p = ${JSON.stringify(publicPath)};`);\n            return Template.asString(buf);\n        });\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br"),a("span",{staticClass:"line-number"},[e._v("51")]),a("br"),a("span",{staticClass:"line-number"},[e._v("52")]),a("br"),a("span",{staticClass:"line-number"},[e._v("53")]),a("br"),a("span",{staticClass:"line-number"},[e._v("54")]),a("br"),a("span",{staticClass:"line-number"},[e._v("55")]),a("br"),a("span",{staticClass:"line-number"},[e._v("56")]),a("br"),a("span",{staticClass:"line-number"},[e._v("57")]),a("br"),a("span",{staticClass:"line-number"},[e._v("58")]),a("br"),a("span",{staticClass:"line-number"},[e._v("59")]),a("br"),a("span",{staticClass:"line-number"},[e._v("60")]),a("br"),a("span",{staticClass:"line-number"},[e._v("61")]),a("br"),a("span",{staticClass:"line-number"},[e._v("62")]),a("br"),a("span",{staticClass:"line-number"},[e._v("63")]),a("br"),a("span",{staticClass:"line-number"},[e._v("64")]),a("br"),a("span",{staticClass:"line-number"},[e._v("65")]),a("br"),a("span",{staticClass:"line-number"},[e._v("66")]),a("br"),a("span",{staticClass:"line-number"},[e._v("67")]),a("br"),a("span",{staticClass:"line-number"},[e._v("68")]),a("br"),a("span",{staticClass:"line-number"},[e._v("69")]),a("br"),a("span",{staticClass:"line-number"},[e._v("70")]),a("br"),a("span",{staticClass:"line-number"},[e._v("71")]),a("br"),a("span",{staticClass:"line-number"},[e._v("72")]),a("br"),a("span",{staticClass:"line-number"},[e._v("73")]),a("br"),a("span",{staticClass:"line-number"},[e._v("74")]),a("br"),a("span",{staticClass:"line-number"},[e._v("75")]),a("br"),a("span",{staticClass:"line-number"},[e._v("76")]),a("br"),a("span",{staticClass:"line-number"},[e._v("77")]),a("br"),a("span",{staticClass:"line-number"},[e._v("78")]),a("br"),a("span",{staticClass:"line-number"},[e._v("79")]),a("br"),a("span",{staticClass:"line-number"},[e._v("80")]),a("br"),a("span",{staticClass:"line-number"},[e._v("81")]),a("br"),a("span",{staticClass:"line-number"},[e._v("82")]),a("br"),a("span",{staticClass:"line-number"},[e._v("83")]),a("br"),a("span",{staticClass:"line-number"},[e._v("84")]),a("br"),a("span",{staticClass:"line-number"},[e._v("85")]),a("br"),a("span",{staticClass:"line-number"},[e._v("86")]),a("br"),a("span",{staticClass:"line-number"},[e._v("87")]),a("br"),a("span",{staticClass:"line-number"},[e._v("88")]),a("br"),a("span",{staticClass:"line-number"},[e._v("89")]),a("br"),a("span",{staticClass:"line-number"},[e._v("90")]),a("br"),a("span",{staticClass:"line-number"},[e._v("91")]),a("br"),a("span",{staticClass:"line-number"},[e._v("92")]),a("br"),a("span",{staticClass:"line-number"},[e._v("93")]),a("br"),a("span",{staticClass:"line-number"},[e._v("94")]),a("br"),a("span",{staticClass:"line-number"},[e._v("95")]),a("br"),a("span",{staticClass:"line-number"},[e._v("96")]),a("br"),a("span",{staticClass:"line-number"},[e._v("97")]),a("br"),a("span",{staticClass:"line-number"},[e._v("98")]),a("br"),a("span",{staticClass:"line-number"},[e._v("99")]),a("br"),a("span",{staticClass:"line-number"},[e._v("100")]),a("br"),a("span",{staticClass:"line-number"},[e._v("101")]),a("br"),a("span",{staticClass:"line-number"},[e._v("102")]),a("br"),a("span",{staticClass:"line-number"},[e._v("103")]),a("br"),a("span",{staticClass:"line-number"},[e._v("104")]),a("br"),a("span",{staticClass:"line-number"},[e._v("105")]),a("br"),a("span",{staticClass:"line-number"},[e._v("106")]),a("br"),a("span",{staticClass:"line-number"},[e._v("107")]),a("br"),a("span",{staticClass:"line-number"},[e._v("108")]),a("br"),a("span",{staticClass:"line-number"},[e._v("109")]),a("br"),a("span",{staticClass:"line-number"},[e._v("110")]),a("br"),a("span",{staticClass:"line-number"},[e._v("111")]),a("br"),a("span",{staticClass:"line-number"},[e._v("112")]),a("br"),a("span",{staticClass:"line-number"},[e._v("113")]),a("br"),a("span",{staticClass:"line-number"},[e._v("114")]),a("br"),a("span",{staticClass:"line-number"},[e._v("115")]),a("br"),a("span",{staticClass:"line-number"},[e._v("116")]),a("br"),a("span",{staticClass:"line-number"},[e._v("117")]),a("br"),a("span",{staticClass:"line-number"},[e._v("118")]),a("br"),a("span",{staticClass:"line-number"},[e._v("119")]),a("br"),a("span",{staticClass:"line-number"},[e._v("120")]),a("br"),a("span",{staticClass:"line-number"},[e._v("121")]),a("br"),a("span",{staticClass:"line-number"},[e._v("122")]),a("br"),a("span",{staticClass:"line-number"},[e._v("123")]),a("br"),a("span",{staticClass:"line-number"},[e._v("124")]),a("br"),a("span",{staticClass:"line-number"},[e._v("125")]),a("br"),a("span",{staticClass:"line-number"},[e._v("126")]),a("br"),a("span",{staticClass:"line-number"},[e._v("127")]),a("br")])]),a("blockquote",[a("p",[e._v("make开始构建")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//开始构建模块对象\nthis.hooks.make.callAsync(compilation, err =>{\n                \n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//SingleEntryPlugin 监听make\nclass SingleEntryPlugin {\n    apply(compiler) {\n        compiler.hooks.make.tapAsync(\n            "SingleEntryPlugin",\n            (compilation, callback) => {\n                const { entry, name, context } = this;\n                \n                //创建依赖\n                const dep = SingleEntryPlugin.createDependency(entry, name);\n                //添加入口文件\n                compilation.addEntry(context, dep, name, callback);\n            }\n        );\n    }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//Compilation.js\nclass Compilation extends Tapable {\n    addEntry(context, entry, name, callback) {\n        ...\n            this._addModuleChain(\n            context,\n            entry,\n            module => {\n                this.entries.push(module);\n            },\n            (err, module) => {\n            ...\n            }\n        );\n    }\n    _addModuleChain(context, dependency, onModule, callback) {\n        ...\n        //获取模块工厂\n        const moduleFactory = this.dependencyFactories.get(Dep);\n        \n        this.semaphore.acquire(() => {\n            ...\n            //创建模块\n            moduleFactory.create(\n                {\n                    contextInfo: {\n                        issuer: "",\n                        compiler: this.compiler.name\n                    },\n                    context: context,\n                    dependencies: [dependency]\n                },...)\n        }\n    }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('class NormalModuleFactory extends Tapable {\n    ...\n    create(data, callback) {\n        ...\n        this.buildModule(module, false, null, null, err => {\n        }\n    }\n    buildModule(module, optional, origin, dependencies, thisCallback) {\n        ...\n        //开始编译\n        module.build(\n            this.options,\n            this,\n            this.resolverFactory.get("normal", module.resolveOptions),\n            this.inputFileSystem,...)\n    }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//NodmalModule\ndoBuild(options, compilation, resolver, fs, callback) {\n        const loaderContext = this.createLoaderContext(\n            resolver,\n            options,\n            compilation,\n            fs\n        );\n        ...\n        //开始运行loader\n        runLoaders(\n            {\n                resource: this.resource,\n                loaders: this.loaders,\n                context: loaderContext,\n                readResource: fs.readFile.bind(fs)\n            },\n            (err, result) => {\n            \n            );\n         )  }\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br")])]),a("p",[e._v("总结")]),e._v(" "),a("blockquote",[a("p",[e._v("初始化阶段")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("事件名")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("解释")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("代码位置")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("读取命令行参数")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("从命令行中读取用户输入的参数")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("require('./convert-argv')(argv)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("实例化Compiler")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("1.用上一步得到的参数初始化Compiler实例 2.Compiler负责文件监听和启动编译3.Compiler实例中包含了完整的Webpack配置（所有的），全局只有一个Compiler实例")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("compiler = webpack(options)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("加载插件")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("1.依次调用插件的apply方法，让插件可以监听后续的所有事件节点，同时给插件传入Compiler实例的引用，以方便插件通过compiler调用webpack提供的API")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("plugin.apply(compiler)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("处理入口")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("读取配置的Entry,为每个Entry实例化一个对应的EntryPlugin,为后面该Entry的递归解析工作做准备")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("new EntryOptionsPlugin() new SingleEntryPlugin(context,item,name) compiler.hooks.make.tapAsync")])])])]),e._v(" "),a("blockquote",[a("p",[e._v("编译阶段")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("事件名")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("解释")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("代码位置")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("run")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("启动一次新的编译")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.hooks.run.callAsync")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("compile")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("该事件是为了告诉插件一次新的编译将要启动，同时会给插件传入compiler对象")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("compiler(callback)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("compilation")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("当webpack以开发模式运行时，每当监测到文件变化，一次新的，Compilation将被创建一个Compilation对象包含了当前的模块资源，编译生成资源，变化的文件，Compilation对象也提供了很多事件回调供插件扩展")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("newCompilation(params)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("make")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("一个新的Compilation创建完毕开始编译")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.hooks.make.callAsync")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("addEntry")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("即将从Entry开始读取文件")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("compilation.addEntry this._addModuleChain")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("moduleFactory")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("创建模块工厂")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("const moduleFactory = this.dependencyFactories.get(Dep)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("create")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("开始创建模块")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v('factory(result,(err,module) this.hooks.resolver.tap("NormalModule")')])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("resolveRequestArray")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("解析loader路径")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("resolveRequestArray")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("resolve")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("解析资源路径")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("resolve")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("userRequest")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("得到包括loader在内的资源文件的绝对路径用！拼起来的字符串")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("userRequest")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("ruleSet.exec")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("它可以根据模块路径名，匹配出模块所需的loader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.ruleSet.exec")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("_run")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("它可以根据模块路径名，匹配出模块所需的loader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("_run")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("loaders")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("得到所有的loader数组")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("results[0].concat(loaders,results[1],results[2])")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("getParser")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("获取AST解析器")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.getParser(type,setting.parser)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("buildModule")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("开始编译模块")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("thislbuildModule(module) buildModule(module,optional,origin,dependencies,thisCallback)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("build->doBuild")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("开始编译")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("build->doBuild")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("loader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("使用loader进行转换")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("runLoaders")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("iteratePitchingLoaders")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("开始递归执行pitchloader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("iteratePitchingLoaders")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("loadLoader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("加载loader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("loadLoader")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("runSyncOrAsync")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("执行loader")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("runSyncOrAsync")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("processResource")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("开始处理资源")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("processResource options.readResource iterateNormalLoaders")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("createSource")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("创建源码对象")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.createSource")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("parse")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("使用parser转换抽象语法树以及抽象语法树")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.parser.parse/parse(source,initialState)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("acorn.parse")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("继续抽象ast语法树")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("acorn.parse(code,parserOptions)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("ImportDependency")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("遍历添加依赖")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("parser.state.module.addDependency")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("succeedModule")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("生成语法树后就表示一个模块编译完成")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.hooks.successdModule.call(module)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("processModuleDependencies")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("递归编译依赖模块")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("his.processModuleDependencies")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("make后")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("结束make，也就是一个compilation编译结束")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("this.hooks.make.callAsync")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("finish")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("编译完成")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("compilation.finishi()")])])])]),e._v(" "),a("blockquote",[a("p",[e._v("结束阶段\n|事件名|解释|代码位置|\n|:--😐:--😐:--😐\n|seal|封装|compilation.seal|\n|addChunk|生成资源|\taddChunk(name)|\n|createChunkAssets|创建资源|this.createChunkAssets()|\n|getRenderManifest|获取要渲染的描述文件|getRenderManifest(options)|\n|render|渲染源码|source = fileManifest.render()|\n|afterCompile|编译结束|this.hooks.afterCompile|\n|shouldemit|所有属性输出的文件已经生成好，询问插件哪些文件需要输出，哪些不需要|this.hooks.shouldEmit|\n|emit|确定后要输出哪些文件后，执行文件输出，可以在这里获取和修改输出内容|this.emitAssets(compilation,this.hooks.emit.callAsync) const emitFiles = err this.outputFileSystem.writeFile|\n|this.emitRecords|写入记录|this.emitRecords|\n|done|全部完成|this.hooks.done.callAsync|")])]),e._v(" "),a("p",[e._v("最后就是尝试给babel写个插件(https://github.com/jamiebuilds/babel-handbook/)")]),e._v(" "),a("p",[e._v("webpack的1版本和2版本都以及过时了,为了遇到一些老得项目时可用\n后期补webpack1 2 3 4 的不同")])])},[],!1,null,null,null);s.default=t.exports}}]);