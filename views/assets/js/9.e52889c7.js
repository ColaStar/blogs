(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{213:function(t,e,s){"use strict";s.r(e);var n=s(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("为什么要学习这些？ 从过程式编程到更高端编程之路上第一个要掌握的东西。\n开发项目，测试脚本。自己对自己测试的一套工具。")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("spc文件自己对自己测试的工具，需要对所有产出的东西进行测试")]),t._v(" "),s("p",[t._v("unit-test")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("单元测试不会真正侵入你的代码，有一种编程方式叫做面向切面编程。面向切面编程是我们要做一些事情的核心。")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("1.TDD关注所有的功能是否被实现（每一个功能都必须有对应的测试用例），suite配合test利用assert('tobi'== user.name)")]),t._v(" "),s("p",[t._v("2.BDD关注整体行为是否符合整体预期，编写的每一行代码都有目的的提供一个全面的测试用例，配合it利用自然语言expect(1)执行")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("ul",[s("li",[t._v("selnium-webdriver自动化牛皮的工具，专门为node做的。")]),t._v(" "),s("li",[t._v("protractor selenium-standalone  ng的专门测试用例能记录所有的log")]),t._v(" "),s("li",[t._v("WEBDRIVERI/O   "),s("a",{attrs:{href:"http://webdriver.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://webdriver.io"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("冒烟测试SmokeTest自由测试的一种，找到一个BUG开发修复，然后专门对此BUG，优点节省时间防止build失败，缺点覆盖率极低。")]),t._v(" "),s("li",[t._v("回归测试\n修改一处对整体功能全部测试，一般配合自动化测试。")])]),t._v(" "),t._m(21),t._v(" "),t._m(22)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"测试核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试核心概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 测试核心概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"单元测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单元测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 单元测试")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("目的：单元测试能够让开发者明确知道代码结果")])]),t._v(" "),s("li",[s("p",[t._v("原则：单一职责，接口抽象，层次分离。")])]),t._v(" "),s("li",[s("p",[t._v("方言："),s("strong",[t._v("管好自己事。能抽象出来的东西，就抽象。把逻辑从函数里抽出去，保证每个function是最小的单元。")])])]),t._v(" "),s("li",[s("p",[t._v("断言库：保证最小单元是否正常运行监测方法。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("测试风格")]),this._v("：测试驱动开发（Test-Driven Development,TDD）、（Behavior Driven Development，BBD）行为驱动开发均是敏捷开发方法论。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("strong",[t._v("单元测试框架")]),t._v("\nbetter-assert(TDD断言库github 190star 19fork)"),s("br"),t._v("\nshould.js(BDD断言库Github 2295star 194fork)"),s("br"),t._v("\n建议用集成TDD与BDD的库"),s("br"),t._v("\nexpect.js(BDD断言库Github 1391star 162fork)"),s("br"),t._v("\nchai.js(TDD BDD双模Github 2823star 271fork)"),s("br"),t._v("\nJasmine.js(BDD Github10723star1680fork)"),s("br"),t._v("\nnode.js本身集成的单元测试")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("单元测试运行流程")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("每一个测试用例组通过describe进行设置  \nbefore(流程发起之前，单个测试用例开始前)->beforeEach(每一个都会遍历一遍，每一个测试用例开始前)->it(对你测试运例的应用，就是人家暴露出来的方法的应用，定义测试用例 并利用断言库进行，设置chai如:expect(x).to.equal(true);异步mocha的库，以上术语就叫mock)->after（流程发起结束）->afterEach（结束后每次遍历）\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("自动化单元测试")]),e("br"),this._v("\n这里用的自动化测试工具是"),e("strong",[this._v("karma")]),this._v("，karma自动化runner集成PhantomJS无刷新；")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install -g karma\n\nnpm install karma-cli --save-dev\n\nnpm install karma-chrome-launcher --save-dev\n\nnpm install karma-phantomjs-launcher --save-dev\n\nnpm install karma-mocha --save-dev\n\nnpm install karma-cha安装断言库\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("报告和单测覆盖率检查")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("npm install karma-coverage --save-dev\n\ncoverageReporter:{\n    type:'html',dir:'coverage/'\n}//配制代码覆盖率测试率生成结果\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br"),e("span",{staticClass:"line-number"},[this._v("5")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"性能测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 性能测试")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("基准测试")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("1.面向切面编程AOP无侵入式统计")]),this._v(" "),e("li",[this._v("2.Benchmark基准测试方法，它并不是简单地统计执行多少次测试代码后对比时间，它对测试有着严密的抽样过程。执行多少次取决于采样到的数据能否完成统计。根据统计次数计算方差。（硬币抛）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("压力测试")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("1.对网络接口做压力测试需要检查的几个常用指标有吞吐率、响应时间和并发数，这些指标反映了服务器并发处理能力（12306吞吐率、）")]),this._v(" "),e("li",[this._v("2.PV网站当日访问人数UV独立访问人数。PV每天几十万甚至上百万就是需要考虑压力测试。换算公式QPS = PV/t  ps:1000000/10"),e("em",[this._v("60")]),this._v("60 = 27.7(100万请求集中在10个小时，服务器每秒处理27.7个业务请求)（养猪）")]),this._v(" "),e("li",[this._v("3.常用的压力测试工具是ab、siege、http_load。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("ab -c 100 -n   100http://localhost:8080每秒持续发出28个请求\nRequest per second 表示服务器每秒处理请求数即QPS\nFailed requests表示此次请求就结束  请求数理论上压力测压值越大增加\n\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安全测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 安全测试")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("分享书籍："),e("a",{attrs:{href:"./web%E5%89%8D%E7%AB%AF%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98.pdf"}},[this._v("web前端黑客解密")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("XSS")]),this._v(" "),e("li",[this._v("SQL    例：万能密码1=1")]),this._v(" "),e("li",[this._v("CSRF")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"功能测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能测试")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[e("strong",[this._v("用户真实性检查")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"jslint-hint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jslint-hint","aria-hidden":"true"}},[this._v("#")]),this._v(" JsLint&Hint")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("目的:检测JavaScript代码标准")]),t._v(" "),s("li",[t._v("原因：JavaScript代码诡异，保证团队代码规范")]),t._v(" "),s("li",[t._v("lint：http://www.jslint.com/")]),t._v(" "),s("li",[t._v("hint:http://wwww.jshint.com/")]),t._v(" "),s("li",[t._v("搭配自动化任务管理工具，完善自动化测试grunt-jsint、grunt-jslint")])])}],!1,null,null,null);e.default=i.exports}}]);