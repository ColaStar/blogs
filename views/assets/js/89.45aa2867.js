(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{488:function(t,a,s){"use strict";s.r(a);var r=s(56),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"solid原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solid原则"}},[t._v("#")]),t._v(" SOLID原则")]),t._v(" "),s("p",[t._v("SOLID 是面向对象设计5大重要原则的首字母缩写，当我们设计类和模块时，遵守 SOLID 原则可以让软件更加健壮和稳定")]),t._v(" "),s("ul",[s("li",[t._v("单一职责原则（SRP）")]),t._v(" "),s("li",[t._v("开放封闭原则（OCP）")]),t._v(" "),s("li",[t._v("里氏替换原则（LSP）")]),t._v(" "),s("li",[t._v("接口隔离原则（ISP）")]),t._v(" "),s("li",[t._v("依赖倒置原则（DIP）")])]),t._v(" "),s("h2",{attrs:{id:"单一职责原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单一职责原则"}},[t._v("#")]),t._v(" 单一职责原则")]),t._v(" "),s("h2",{attrs:{id:"开放封闭原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开放封闭原则"}},[t._v("#")]),t._v(" 开放封闭原则")]),t._v(" "),s("h2",{attrs:{id:"里氏替换原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#里氏替换原则"}},[t._v("#")]),t._v(" 里氏替换原则")]),t._v(" "),s("h2",{attrs:{id:"接口隔离原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口隔离原则"}},[t._v("#")]),t._v(" 接口隔离原则")]),t._v(" "),s("h2",{attrs:{id:"依赖倒置原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖倒置原则"}},[t._v("#")]),t._v(" 依赖倒置原则")])])}),[],!1,null,null,null);a.default=e.exports}}]);