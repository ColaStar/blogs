(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{152:function(s,a,n){"use strict";n.r(a);var e=n(0),t=Object(e.a)({},function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"react"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[s._v("#")]),s._v(" react")]),s._v(" "),n("h2",{attrs:{id:"介绍与发展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍与发展","aria-hidden":"true"}},[s._v("#")]),s._v(" 介绍与发展")]),s._v(" "),n("ul",[n("li",[s._v("react是Feckbook开发的一款用来构建用户见面的js库，他只是做一个views，专门是用来用户界面的库。")]),s._v(" "),n("li",[s._v("Virtual DOM 是一个模拟DOM树的Javascript对象。React使用 Virtual DOM来渲染UI，同时监听Virtual DOM上的数据变化并自动前一这些变化到UI上")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("传入属性 构建Virtual DOM，状态对应一个内容。")])]),s._v(" "),n("li",[n("p",[s._v("JSX 是React定义的一种Javascript语法扩展，类似与XML。JSX是可选的，我们完全可以使用Javascript来编写React应用，不过JSX提供了一套更为简单的方式；来写react的应用。")])])]),s._v(" "),n("p",[n("img",{attrs:{src:"react%E5%8F%91%E5%B1%95.png",alt:""}})]),s._v(" "),n("p",[s._v("19年已经更新到了16.8的版本")]),s._v(" "),n("h2",{attrs:{id:"react开发环境与ecmascript6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react开发环境与ecmascript6","aria-hidden":"true"}},[s._v("#")]),s._v(" React开发环境与EcmaScript6")]),s._v(" "),n("h2",{attrs:{id:"jsx使用与介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsx使用与介绍","aria-hidden":"true"}},[s._v("#")]),s._v(" JSX使用与介绍")]),s._v(" "),n("h3",{attrs:{id:"优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优点","aria-hidden":"true"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),n("ul",[n("li",[s._v("JSX 执行更快，因为它在编译为 JavaScript 代码后进行了优化。")]),s._v(" "),n("li",[s._v("它是类型安全的，在编译过程中就能发现错误。")]),s._v(" "),n("li",[s._v("使用 JSX 编写模板更加简单快速。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const element = <h1>Hello, world!</h1>;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这种看起来可能有些奇怪的标签语法既不是字符串也不是 "),n("code",[s._v("HTML")]),s._v("。")]),s._v(" "),n("p",[s._v("它被称为 "),n("code",[s._v("JSX，")]),s._v(" 一种 "),n("code",[s._v("JavaScript")]),s._v(" 的语法扩展。 我们推荐在 "),n("code",[s._v("React")]),s._v(" 中使用 "),n("code",[s._v("JSX")]),s._v(" 来描述用户界面。")]),s._v(" "),n("p",[n("code",[s._v("JSX")]),s._v(" 是在 "),n("code",[s._v("JavaScript")]),s._v(" 内部实现的。")]),s._v(" "),n("p",[s._v("我们知道元素是构成 "),n("code",[s._v("React")]),s._v(" 应用的最小单位，"),n("code",[s._v("JSX")]),s._v(" 就是用来声明 "),n("code",[s._v("React")]),s._v(" 当中的元素。")]),s._v(" "),n("p",[s._v("与浏览器的 "),n("code",[s._v("DOM")]),s._v(" 元素不同，"),n("code",[s._v("React")]),s._v(" 当中的元素事实上是普通的对象，"),n("code",[s._v("React DOM")]),s._v(" 可以确保 浏览器 "),n("code",[s._v("DOM")]),s._v(" 的数据内容与 "),n("code",[s._v("React")]),s._v(" 元素保持一致。")]),s._v(" "),n("p",[s._v("要将 "),n("code",[s._v("React")]),s._v(" 元素渲染到根 "),n("code",[s._v("DOM")]),s._v(" 节点中，我们通过把它们都传递给 "),n("code",[s._v("ReactDOM.render()")]),s._v(" 的方法来将其渲染到页面上：")]),s._v(" "),n("blockquote",[n("p",[s._v("ES5写法\n"),n("img",{attrs:{src:"reactes5.png",alt:""}})])]),s._v(" "),n("blockquote",[n("p",[s._v("ES6写法\n"),n("img",{attrs:{src:"reactes6.png",alt:""}})])]),s._v(" "),n("blockquote",[n("p",[s._v("react组件怎么用呢\n"),n("img",{attrs:{src:"react%E7%BB%84%E4%BB%B6%E6%80%8E%E4%B9%88%E7%94%A8%E5%91%A2.png",alt:""}})])]),s._v(" "),n("blockquote",[n("p",[s._v("Dom diff")])]),s._v(" "),n("p",[n("img",{attrs:{src:"reactdomdiff.png",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"reactdomdiff%E4%BE%8B%E5%AD%901.png",alt:""}})]),s._v(" "),n("p",[s._v("Dom diff是为渲染的性能，最小化的一个渲染机制")]),s._v(" "),n("blockquote",[n("p",[s._v("JSX注意事项\n"),n("img",{attrs:{src:"JSX%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.png",alt:""}})])]),s._v(" "),n("h2",{attrs:{id:"非dom属性介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非dom属性介绍","aria-hidden":"true"}},[s._v("#")]),s._v(" 非Dom属性介绍")]),s._v(" "),n("p",[s._v("ref与key")]),s._v(" "),n("p",[n("img",{attrs:{src:"%E9%9D%9EDom%E5%B1%9E%E6%80%A7%E4%BB%8B%E7%BB%8D.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"webapp缺点与优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webapp缺点与优点","aria-hidden":"true"}},[s._v("#")]),s._v(" webApp缺点与优点")]),s._v(" "),n("p",[s._v("缺点：")]),s._v(" "),n("ul",[n("li",[s._v("1.Web基于DOM，而DOM很慢")]),s._v(" "),n("li",[s._v("2.DOM拖慢JavaScript。")]),s._v(" "),n("li",[s._v("3。网页是单线程的")]),s._v(" "),n("li",[s._v("网页没有硬件加速")])]),s._v(" "),n("p",[s._v("优点：")]),s._v(" "),n("ul",[n("li",[s._v("1.跨平台：所有系统都能使用")]),s._v(" "),n("li",[s._v("2.免安装：打开浏览器就能使用")]),s._v(" "),n("li",[s._v("3.快速部署：升级只需在服务器更新代码")]),s._v(" "),n("li",[s._v("4.超链接：可以与其他网站互联，可以被搜索引擎检索")])]),s._v(" "),n("p",[s._v("react-canvas这个包是基于canvas和react的把jsx语法化成canvas")]),s._v(" "),n("h2",{attrs:{id:"属性、状态的介绍与用法以及对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性、状态的介绍与用法以及对比","aria-hidden":"true"}},[s._v("#")]),s._v(" 属性、状态的介绍与用法以及对比")]),s._v(" "),n("blockquote",[n("p",[s._v("属性（props）的介绍与用法")])]),s._v(" "),n("p",[s._v("属性 是一个事物的性质与关系往往是与生俱来的，无法改变的")]),s._v(" "),n("p",[n("strong",[s._v("属性的用法")])]),s._v(" "),n("ul",[n("li",[s._v("可以传入变量、number、string、数组、等")]),s._v(" "),n("li",[s._v("数组形式用法（需要加key防止整体重新渲染）")])]),s._v(" "),n("p",[n("img",{attrs:{src:"reactprops%E7%94%A8%E6%B3%95.png",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"reactprops%E6%95%B0%E7%BB%84%E7%94%A8%E6%B3%95.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("默认 Props")])]),s._v(" "),n("p",[s._v("通过组件类的 defaultProps 属性为 props 设置默认值，")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//属性与状态\nclass HelloMessage extend React.Component{\n    render(){\n        retun <h1 onClick={this.handle} className=\"h1\">{this.props.name}</h1>\n        )\n    }\n}\nHelloMessage.defaultProps = {\n  name: 'Runoob'\n};\nReactDOM.reder(<HelloMessage name=\"吕鉴\" name:{吕鉴} name={123} name={this.data}/>,\ndocument.getElementById('exampdayle'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("blockquote",[n("p",[s._v("状态state")])]),s._v(" "),n("p",[s._v("React 把组件看成是一个状态机（State Machines）。通过与用户的交互，实现不同状态，然后渲染 UI，让用户界面和数据保持一致。")]),s._v(" "),n("p",[s._v("React 里，只需更新组件的 state，然后根据新的 state 重新渲染用户界面（不要操作 DOM）。")]),s._v(" "),n("ul",[n("li",[s._v("事物所处的状态")]),s._v(" "),n("li",[s._v("状态是由事物自行处理的，不断变化的，")]),s._v(" "),n("li",[s._v("对于React来讲一切变化全部基于状态，")]),s._v(" "),n("li",[s._v("通过setState进行改变")]),s._v(" "),n("li",[s._v("每次执行"),n("code",[s._v("setState")]),s._v("时"),n("code",[s._v("render")]),s._v("进行"),n("code",[s._v("Dom diff")]),s._v("算法进行重新计算，发生变化后进行更新,")])]),s._v(" "),n("p",[s._v("缺点：即每次state改变都会进行重排")]),s._v(" "),n("p",[s._v("如何优化呢？")]),s._v(" "),n("p",[n("img",{attrs:{src:"reactstate.png",alt:""}})]),s._v(" "),n("blockquote",[n("p",[s._v("属性状态对比？")])]),s._v(" "),n("ul",[n("li",[s._v("都是纯js对象")]),s._v(" "),n("li",[s._v("都会触发render更新")]),s._v(" "),n("li",[s._v("props 是不可变的,如果需要改变就需要把state放到props上边，而 state 可以根据与用户交互来改变。")]),s._v(" "),n("li",[s._v("但是props只有一次触发render只传递一次 ，state一直在触发，即实时修改")]),s._v(" "),n("li",[s._v("都具有确定性")]),s._v(" "),n("li",[s._v("组件在运行时需要修改的数据就是状态")])]),s._v(" "),n("p",[n("img",{attrs:{src:"react%E5%B1%9E%E6%80%A7%E4%B8%8E%E7%8A%B6%E6%80%81%E5%AF%B9%E6%AF%94.png",alt:""}})]),s._v(" "),n("p",[s._v("状态是自己的属性是组件之间的")]),s._v(" "),n("blockquote",[n("p",[s._v("单向数据流")])]),s._v(" "),n("p",[s._v("任何状态始终由某些特定组件所有，并且从该状态导出的任何数据或 UI 只能影响树中下方的组件。")]),s._v(" "),n("p",[s._v("如果你想象一个组件树作为属性的瀑布，每个组件的状态就像一个额外的水源，它连接在一个任意点，但也流下来。")]),s._v(" "),n("h2",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期","aria-hidden":"true"}},[s._v("#")]),s._v(" 生命周期")]),s._v(" "),n("p",[n("strong",[s._v("React v16.3之前生命周期")]),s._v(" "),n("img",{attrs:{src:"react16.3%E4%B9%8B%E5%89%8D%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png",alt:""}}),s._v(" "),n("strong",[s._v("React v16.3生命周期")]),s._v(" "),n("img",{attrs:{src:"react16.3%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("React v16.4生命周期")]),s._v(" "),n("img",{attrs:{src:"react16.4%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png",alt:""}})]),s._v(" "),n("blockquote",[n("p",[s._v("生命周期介绍与初始化阶段\n组件本质上是状态机，输入确定，输出确定。状态发生转换时会触发不同的钩子函数，从而让开发者有机会做出响应。可以用事件的思路来理解状态。\n初始化-> 运行中-> 销毁\n"),n("img",{attrs:{src:"react%E5%88%9D%E5%A7%8B%E5%8C%96%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png",alt:""}}),s._v("\ngetDeaultProps\ngetInitalState\ncomponentWill\n运行中阶段\n运行中拿到上拿到下")])]),s._v(" "),n("p",[s._v("componentWillReceiveProps 在组件接收到一个新的 prop (更新后)时被调用。这个方法在初始化render时不会被调用。")]),s._v(" "),n("p",[s._v("shouldComponentUpdate 返回一个布尔值。在组件接收到新的props或者state时被调用。在初始化时或者使用forceUpdate时不被调用。\n可以在你确认不需要更新组件时使用。\n默认return true")]),s._v(" "),n("p",[s._v("componentWillUpdate在组件接收到新的props或者state但还没有render时被调用。在初始化时不会被调用。")]),s._v(" "),n("p",[s._v("render")]),s._v(" "),n("p",[s._v("componentDidUpdate 在组件完成更新后立即调用。在初始化时不会被调用。")]),s._v(" "),n("blockquote",[n("p",[s._v("销毁阶段")])]),s._v(" "),n("p",[s._v("componentDidUnmount")]),s._v(" "),n("h2",{attrs:{id:"组件介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件介绍","aria-hidden":"true"}},[s._v("#")]),s._v(" 组件介绍")]),s._v(" "),n("ul",[n("li",[s._v("普通组件component")]),s._v(" "),n("li",[s._v("纯组件PureComponent\n"),n("code",[s._v("PureComponent")]),s._v("的自动为我们添加的"),n("code",[s._v("shouldComponentUpate")]),s._v("函数")]),s._v(" "),n("li",[s._v("纯函数组件\n没有自身的状态，相同的props输入必然会获得完全相同的组件展示。不需要关心组件的一些生命周期函数和渲染的钩子更简洁。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const Button = ({ day }) => {\n  return (\n    <div>\n      <button className=\"btn btn-warning\">我是 {day.name}</button>\n    </div>\n  );\n};\nconst message = {\n  name:'纯函数组件'\n}\nclass Greeting extends Component {\n  render() {\n    return <Button day={message}></Button>;\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[s._v("高阶组件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//注值 localStorage.username = "老袁"\nconst wrapWithUsername = WrappedComponent => {\n  class NewComponent extends Component {\n    constructor() {\n      super();\n      this.state = {\n        username: ""\n      };\n    }\n    componentWillMount() {\n      let username = localStorage.getItem("username");\n      this.setState({\n        username: username\n      });\n    }\n\n    render() {\n      return <WrappedComponent username={this.state.username} />;\n    }\n  }\n\n  return NewComponent;\n};\nclass Welcome extends Component {\n  render() {\n    return <div className="text-warning">welcome {this.props.username}</div>;\n  }\n}\n//升级高阶组件\nWelcome = wrapWithUsername(Welcome);\n\nclass Goodbye extends Component {\n  render() {\n    return <div className="text-info">goodbye {this.props.username}</div>;\n  }\n}\n//升级高阶组件\nGoodbye = wrapWithUsername(Goodbye);\nclass Greeting extends Component {\n  render() {\n    return (\n      <>\n        <Welcome /> <Goodbye />\n      </>\n    );\n  }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("ul",[n("li",[s._v("组件插槽\n提供了一个顶级的方法，使得我们有能力把一个子组件渲染到父组件 DOM 层级以外的 DOM 节点上。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//组件插槽\nconst portalElm = document.createElement(\'div\');\nportalElm.className="txtcenter"\ndocument.body.appendChild(portalElm)\n\nclass App extends React.Component {\n  state = {\n    show: true,\n  }\n\n  handleClick = () => {\n    this.setState({\n      show: !this.state.show,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <button className="btn btn-primary" onClick={this.handleClick}>动态展现Portal组件</button>\n        {this.state.show ? (\n          <div>{ReactDOM.createPortal(<span>Portal组件</span>, portalElm)}</div>\n        ) : null}\n      </div>\n    )\n  }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("React可控与不可控控件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//不可控控件\n<input defaultvalue={'aaa'}/>\n通过refs或者findDOMNode去获取值\n//可控空间\n<input value={this.state.name}/>\n直接取this.state获取\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("可控控件的好处")]),s._v(" "),n("ul",[n("li",[s._v("符合react的数据流")]),s._v(" "),n("li",[s._v("数据存储在state中便于取用")]),s._v(" "),n("li",[s._v("便于对数据进行处理")])]),s._v(" "),n("p",[s._v("React不同表单元素的使用\nlabel  HtmlFor")]),s._v(" "),n("p",[s._v("事件处理函数以及this\n驼峰\nthis处理使用bind或剪头函数")]),s._v(" "),n("p",[s._v("flux架构")]),s._v(" "),n("p",[s._v("、")])])},[],!1,null,null,null);a.default=t.exports}}]);