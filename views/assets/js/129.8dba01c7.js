(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{181:function(l,t,e){"use strict";e.r(t);var a=e(0),i=Object(a.a)({},function(){var l=this,t=l.$createElement,e=l._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("h2",{attrs:{id:"请你说明前端开发为啥需要工程化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请你说明前端开发为啥需要工程化","aria-hidden":"true"}},[l._v("#")]),l._v(" 请你说明前端开发为啥需要工程化")]),l._v(" "),e("p",[l._v("结合自己的项目的具体开发环境来进行详细描述")]),l._v(" "),e("ul",[e("li",[l._v("1.工程化为了提高效率和降低成本而生。")]),l._v(" "),e("li",[l._v("2.前端工程化实现的方案必须包括如下要素：\n"),e("ul",[e("li",[l._v("开发规范（Css hint，Html Hint,js lint等），")]),l._v(" "),e("li",[l._v("模块化开发（包括资源的模块化，CSS的模块化包含BEM css Modules、JS模块化），")]),l._v(" "),e("li",[l._v("组件化开发，（每一个包含模版HTML + 样式CSS+逻辑JS功能完备的结构单元，统一前端框架/类库思想是先组织DOM，然后把某些可复用的逻辑封装成组件来操作DOM，是DOM优先；而组件化框架/类库的思想是先来构思组件，然后用DOM这种基本单元结合相应逻辑来实现组件，是组件优先。现在可以先分文件夹再甚至用Vue定义进一步细致的组件）")]),l._v(" "),e("li",[l._v("组件仓库（Git、SVN着重于自动化分支构建）")]),l._v(" "),e("li",[l._v("性能优化（自动化的压缩合并打包加载、）")]),l._v(" "),e("li",[l._v("预编译和资源注入（包括es6/7语法转译、css预编译器处理、spirit图片生成），")]),l._v(" "),e("li",[l._v("部署，开发流程（集成Code Review、Bug收集、敏捷开发、文件监听、动态编译），开发文档（jsDoc），自动化测试")])])]),l._v(" "),e("li",[l._v("3.JavaScript面向对象开发HTMlL面向组件开发。")]),l._v(" "),e("li",[l._v("4.不把代码交给机器的程序员不是好的程序员。")])]),l._v(" "),e("h2",{attrs:{id:"请绘制代码版本仓库多分枝的流程图以及如何用node实现自动化分支构建？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请绘制代码版本仓库多分枝的流程图以及如何用node实现自动化分支构建？","aria-hidden":"true"}},[l._v("#")]),l._v(" 请绘制代码版本仓库多分枝的流程图以及如何用NOde实现自动化分支构建？")]),l._v(" "),e("h2",{attrs:{id:"请说明-grunt、gulp、webpack、rollup、fis、pacrcel的优缺点？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请说明-grunt、gulp、webpack、rollup、fis、pacrcel的优缺点？","aria-hidden":"true"}},[l._v("#")]),l._v(" 请说明 Grunt、Gulp、Webpack、Rollup、FIS、Pacrcel的优缺点？")]),l._v(" "),e("ul",[e("li",[e("p",[l._v("grunt：通过Gruntfile配置后，可以实现自动化。在执行缩小，编译，单元测试，测试等重复性任务，虽然grunt看似已垂垂老矣，但是以前写的很多项目一直用的就是grunt，温故方能知新。")])]),l._v(" "),e("li",[e("p",[l._v("Gulp:Gulp是一个基于流的自动化构建工具。除了可以管理执行任务，换可以监听文件，读写文件")])]),l._v(" "),e("li",[e("p",[l._v("FIS称自己可能是 史上最强大的前端工程化方案，其实也是不误道理的。因为它不但解决前端开发中自动化工具、性能优化、魔魁阿花框架、开发规范、代码部署、开发流程等问题还有一套完整的后端解决方案。但是此项目在百度内部，且维护成本不高已看衰。不过它的经典前端功臣花朵思想完全能够让我们进行借鉴。")])]),l._v(" "),e("li",[e("p",[l._v("Rollup是一个和Webpack很类似但很专注于ES6模块打包工具。它的亮点在于，能针对ES6源码进行 tree Shaking。以去除那些已经被定义但没被使用的代码并进行 Scope Hoisting，以减少文件大小和提升运行性能。然而rollup的这些亮点随后就被Webpack模仿和实现。不支持Code Spliting，但打包出来的代码更小、更快。")])]),l._v(" "),e("li",[e("p",[l._v("parcel已快速打包，自动转换、零配置代码拆分，支持模块热替换和友好的错误记录迅速火热，但也被webpack抄袭过来，未来怎么样，谁也说不好啊。")])]),l._v(" "),e("li",[e("p",[l._v("Webpack是一个打包模块化JavaScript的工具，在webpack里一切文件皆模块，通过loader转换文件，通过Plugin注入钩子，最后输出由多个模块组合成的文件，Webpack专注于构建模块化项目。")])])])])},[],!1,null,null,null);t.default=i.exports}}]);