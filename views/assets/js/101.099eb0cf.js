(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{235:function(e,t,n){"use strict";n.r(t);var v=n(0),_=Object(v.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"微前端micro-frontend"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微前端micro-frontend","aria-hidden":"true"}},[e._v("#")]),e._v(" 微前端Micro-Frontend")]),e._v(" "),n("p",[e._v("概念")]),e._v(" "),n("p",[e._v("是将微服务理念用于前端技术后的相关实践，使得一个前端项目能够\n特性：")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("各个开发团队都可以自行选择技术栈，不受同一项目中其他团队影响。")])]),e._v(" "),n("li",[n("p",[e._v("前端的项目抽成一块块的，每个块都是独立的一块的，互不影响")])])]),e._v(" "),n("p",[e._v("bfcChace往返缓存（好好看看）\n在大型团队里边一个项目多个技术\n入门")]),e._v(" "),n("p",[e._v("yog2 实现微前端笔记比较老\ncrm 中台")]),e._v(" "),n("p",[e._v("微前端组件不能通信，用webcomponent")]),e._v(" "),n("p",[e._v("浏览器支持用modlue不支持用systemjs")]),e._v(" "),n("p",[e._v("如果让你做一个single-spa你怎么做")]),e._v(" "),n("p",[e._v("首先想他们最后后变成什么，不就是一个js么，但是不用webpack（原因：需要使用统一的模块加载机制，webpack的chunk，webpack不支持任何库改变他的模块机制，）先保持组件之间的独立，代码必须是自己的那一套模块规范（systemjs）")]),e._v(" "),n("p",[e._v("首先要有一个主线，")]),e._v(" "),n("p",[e._v("mooa单个框架的前端微服务框架。")]),e._v(" "),n("p",[e._v("多框架用single-spa实现微前端")]),e._v(" "),n("p",[e._v("OMi框架webcompont如果可以的话，这个就牛逼了")]),e._v(" "),n("p",[e._v("nust nest next "),n("code",[e._v("neat css框架")]),e._v("四个ssr框架")])])},[],!1,null,null,null);t.default=_.exports}}]);